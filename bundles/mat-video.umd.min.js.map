{"version":3,"sources":["../../node_modules/tslib/tslib.es6.js","ng://mat-video/app/video/services/event.service.ts","ng://mat-video/app/video/ui/mat-volume-control/mat-volume-control.component.ts","ng://mat-video/app/video/video.component.ts","ng://mat-video/app/video/directives/mat-video-source.directive.ts","ng://mat-video/app/video/directives/mat-video-track.directive.ts","ng://mat-video/app/video/internal/mat-slider-progress-bar/mat-slider-progress-bar.component.ts","ng://mat-video/app/video/pipes/seconds-to-time.pipe.ts","ng://mat-video/app/video/services/fullscreen.service.ts","ng://mat-video/app/video/ui/mat-download-button/mat-download-button.component.ts","ng://mat-video/app/video/ui/mat-frame-by-frame-control/mat-frame-by-frame-control.component.ts","ng://mat-video/app/video/ui/mat-fullscreen-button/mat-fullscreen-button.component.ts","ng://mat-video/app/video/ui/mat-play-button/mat-play-button.component.ts","ng://mat-video/app/video/ui/mat-quality-control/mat-quality-control.component.ts","ng://mat-video/app/video/ui/mat-seek-progress-control/mat-seek-progress-control.component.ts","ng://mat-video/app/video/ui/mat-time-control/mat-time-control.component.ts","ng://mat-video/app/video/ui/mat-video-spinner/mat-video-spinner.component.ts","ng://mat-video/app/video/video.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","__values","o","s","Symbol","iterator","m","call","next","value","done","TypeError","EventService","prototype","addEvents","renderer","events","event_1","dispose","listen","element","name","newEvent","callback","events_1","tslib_1.__values","events_1_1","removeEvents","events_2","events_2_1","event_2","Injectable","MatVolumeControlComponent","evt","this","video","color","volume","volumeChanged","EventEmitter","muted","mutedChanged","keyboard","ngAfterViewInit","updateMuted","ngOnChanges","changes","setVolume","emit","setMuted","toggleMuted","emitChange","onMuteKey","event","preventDefault","tslib_1.__decorate","Input","Output","HostListener","Component","selector","template","MatVideoComponent","src","title","autoplay","preload","loop","quality","fullscreen","playsinline","showFrameByFrame","fps","download","spinner","poster","overlay","mutedChange","timeChange","playing","isFullscreen","videoLoaded","isMouseMoving","isMouseMovingTimeout","getVideoTag","currentTime","val","_this","duration","lastTime","setTimeout","nativeElement","evLoadedMetadata","console","error","evTimeUpdate","player","evMouseMove","onloadeddata","setVideoSrc","ngOnDestroy","load","videoWidth","videoHeight","clearTimeout","isMouseMovingTimer","time","getOverlayClass","activeClass","inactiveClass","srcObjectURL","URL","revokeObjectURL","HTMLVideoElement","srcObject","createObjectURL","MediaStream","volumeControl","Renderer2","ViewChild","MatVideoSourceDirective","matVideoComponent","el","type","init","source","Host","ElementRef","Directive","tslib_1.__param","MatVideoTrackDirective","kind","srclang","label","track","sliderprogressbarId","MatSliderProgressBarComponent","_super","elementRef","focusMonitor","changeDetectorRef","dir","tabIndex","mode","_bufferValue","parseInt","__","constructor","create","tslib_1.__extends","v","min","max","Math","clamp","axis","vertical","transform","FocusMonitor","ChangeDetectorRef","Directionality","Optional","Attribute","args","providers","MAT_SLIDER_VALUE_ACCESSOR","host","(focus)","(blur)","(click)","(mousedown)","(keydown)","(keyup)","(mouseenter)","class","role","[tabIndex]","[attr.aria-disabled]","[attr.aria-valuemax]","[attr.aria-valuemin]","[attr.aria-valuenow]","[attr.aria-orientation]","[class.mat-slider-disabled]","[class.mat-slider-has-ticks]","[class.mat-slider-horizontal]","[class.mat-slider-axis-inverted]","[class.mat-slider-sliding]","[class.mat-slider-thumb-label-showing]","[class.mat-slider-vertical]","[class.mat-slider-min-value]","[class.mat-slider-hide-last-tick]","inputs","changeDetection","ChangeDetectionStrategy","OnPush","MatSlider","SecondsToTimePipe","times","year","month","day","hour","seconds","time_string","floor","toString","Pipe","FullscreenService","fnMap","keyboardAllowed","Element","ret","document","fn","request","elem","requestFullscreen","documentElement","test","navigator","userAgent","ALLOW_KEYBOARD_INPUT","exit","exitFullscreen","toggle","onChange","addEventListener","fullscreenchange","onError","fullscreenerror","Boolean","fullscreenElement","isEnabled","fullscreenEnabled","getElement","MatDownloadButtonComponent","MatFrameByFrameControlComponent","ngOnInit","seekFrames","nbFrames","paused","pause","newPos","MatFullscreenButtonComponent","fscreen","canFullscreen","fullscreenChanged","onChangesFullscreen","setFullscreen","toggleFullscreen","updateFullscreen","onFullscreenKey","MatPlayButtonComponent","play","playChanged","setVideoPlayback","toggleVideoPlayback","updateVideoPlayback","onPlayKey","MatQualityControlComponent","MatSeekProgressControlComponent","curTimePercent","bufTimePercent","currentTimeChanged","bufferedTime","bufferedTimeChanged","updateCurrentTime","updateBufferedTime","seekVideo","percentage","newTime","updateTime","buffered","largestBufferValue","cur","start","end","emitter","MatTimeControlComponent","MatVideoSpinnerComponent","videoBuffering","MatVideoModule","NgModule","declarations","imports","CommonModule","MatIconModule","MatButtonModule","MatSliderModule","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Injectable, Renderer2 } from '@angular/core';\nimport { EventHandler } from '../interfaces/event-handler.interface';\n\n@Injectable()\nexport class EventService {\n\n    constructor() { }\n\n    addEvents(renderer: Renderer2, events: EventHandler[]): void {\n        for (const event of events)\n            event.dispose = renderer.listen(event.element, event.name, newEvent => event.callback(newEvent));\n    }\n\n    removeEvents(events: EventHandler[]): void {\n        for (const event of events)\n            if (event.dispose)\n                event.dispose();\n    }\n\n}\n","import {\n  AfterViewInit,\n  Component,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges\n} from '@angular/core';\nimport { ThemePalette } from '@angular/material/core';\n\nimport { EventService } from '../../services/event.service';\n\n@Component({\n  selector: 'mat-volume-control',\n  templateUrl: './mat-volume-control.component.html',\n  styleUrls: ['./mat-volume-control.component.css']\n})\nexport class MatVolumeControlComponent implements AfterViewInit, OnChanges {\n  @Input() video: HTMLVideoElement = null;\n\n  @Input() color: ThemePalette = 'primary';\n\n  @Input() volume: number = 1;\n\n  @Output() volumeChanged = new EventEmitter<number>();\n\n  @Input() muted: boolean = false;\n\n  @Output() mutedChanged = new EventEmitter<boolean>();\n\n  @Input() keyboard: boolean = true;\n\n  constructor(private evt: EventService) { }\n\n  ngAfterViewInit(): void {\n    this.updateMuted(false);\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.muted) {\n      this.updateMuted(false);\n    }\n  }\n\n  setVolume(value: number): void {\n    this.volume = value;\n    this.video.volume = this.volume;\n    this.volumeChanged.emit(this.volume);\n\n    if (this.volume > 0)\n      this.setMuted(false);\n  }\n\n  setMuted(value: boolean): void {\n    if (this.muted !== value)\n      this.toggleMuted();\n  }\n\n  toggleMuted(): void {\n    this.muted = !this.muted;\n    this.updateMuted();\n  }\n\n  updateMuted(emitChange: boolean = true): void {\n    if (this.video) {\n      this.video.muted = this.muted;\n    }\n\n    if (emitChange) {\n      this.mutedChanged.emit(this.muted);\n    }\n  }\n\n  @HostListener('document:keyup.m', ['$event'])\n  onMuteKey(event: KeyboardEvent) {\n    if (this.keyboard) {\n      this.toggleMuted();\n      event.preventDefault();\n    }\n  }\n\n}\n","import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnDestroy,\n    Output,\n    Renderer2,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { ThemePalette } from '@angular/material/core';\n\nimport { MatVolumeControlComponent } from './ui/mat-volume-control/mat-volume-control.component';\nimport { EventHandler } from './interfaces/event-handler.interface';\nimport { EventService } from './services/event.service';\n\n@Component({\n    selector: 'mat-video',\n    templateUrl: './video.component.html',\n    styleUrls: ['./video.component.css']\n})\nexport class MatVideoComponent implements AfterViewInit, OnChanges, OnDestroy {\n    @ViewChild('player') private player: ElementRef;\n    @ViewChild('video') private video: ElementRef;\n    @ViewChild(MatVolumeControlComponent) private volumeControl: MatVolumeControlComponent;\n\n    @Input() src: string|MediaStream|MediaSource|Blob = null;\n    @Input() title: string = null;\n    @Input() autoplay: boolean = false;\n    @Input() preload: boolean = true;\n    @Input() loop: boolean = false;\n    @Input() quality: boolean = true;\n    @Input() fullscreen: boolean = true;\n    @Input() playsinline: boolean = false;\n    @Input() showFrameByFrame: boolean = false;\n    @Input() fps: number = 29.97;\n    @Input() download: boolean = false;\n    @Input() color: ThemePalette = 'primary';\n    @Input() spinner: string = 'spin';\n    @Input() poster: string = null;\n    @Input() keyboard: boolean = true;\n    @Input() overlay: boolean = null;\n    @Input() muted: boolean = false;\n    @Output() mutedChange = new EventEmitter<boolean>();\n\n\n    @Input()\n    get time() {\n        return this.getVideoTag().currentTime;\n    }\n\n    @Output() timeChange = new EventEmitter<number>();\n    set time(val: number) {\n        const video: HTMLVideoElement = this.getVideoTag();\n        if (video && val) {\n            if (val > video.duration) {\n                val = video.duration;\n            }\n            if (val < 0) {\n                val = 0;\n            }\n            if (val !== video.currentTime) {\n                video.currentTime = val;\n            }\n            if (this.lastTime !== video.currentTime) {\n                setTimeout(() => this.timeChange.emit(video.currentTime), 0);\n                this.lastTime = video.currentTime;\n            }\n        }\n    }\n\n    playing: boolean = false;\n\n    isFullscreen: boolean = false;\n\n    videoWidth: number;\n    videoHeight: number;\n    lastTime: number;\n\n    videoLoaded = false;\n\n    private isMouseMoving: boolean = false;\n    private isMouseMovingTimer: NodeJS.Timer;\n    private isMouseMovingTimeout: number = 2000;\n\n    private events: EventHandler[];\n\n    private srcObjectURL: string;\n\n    constructor(\n        private renderer: Renderer2,\n        private evt: EventService\n    ) { }\n\n    ngAfterViewInit(): void {\n        this.events = [\n            { element: this.video.nativeElement, name: 'loadstart', callback: event => this.videoLoaded = false, dispose: null },\n            { element: this.video.nativeElement, name: 'loadedmetadata', callback: event => this.evLoadedMetadata(event), dispose: null },\n            { element: this.video.nativeElement, name: 'error', callback: event => console.error('Unhandled Video Error', event), dispose: null },\n            { element: this.video.nativeElement, name: 'contextmenu', callback: event => event.preventDefault(), dispose: null },\n            { element: this.video.nativeElement, name: 'timeupdate', callback: event => this.evTimeUpdate(event), dispose: null },\n            { element: this.player.nativeElement, name: 'mousemove', callback: event => this.evMouseMove(event), dispose: null }\n        ];\n\n        this.video.nativeElement.onloadeddata = () => this.videoLoaded = true;\n\n        this.evt.addEvents(this.renderer, this.events);\n        this.setVideoSrc(this.src);\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes.src) {\n            this.setVideoSrc(this.src);\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.video.nativeElement.onloadeddata = null;\n\n        this.evt.removeEvents(this.events);\n        this.setVideoSrc(null);\n    }\n\n    load(): void {\n        if (this.video && this.video.nativeElement)\n            this.video.nativeElement.load();\n    }\n\n    getVideoTag(): HTMLVideoElement | null {\n        return this.video && this.video.nativeElement ? this.video.nativeElement as HTMLVideoElement : null;\n    }\n\n    evLoadedMetadata(event: any): void {\n        this.videoWidth = this.video.nativeElement.videoWidth;\n        this.videoHeight = this.video.nativeElement.videoHeight;\n        this.videoLoaded = true;\n    }\n\n    evMouseMove(event: any): void {\n        this.isMouseMoving = true;\n        clearTimeout(this.isMouseMovingTimer);\n        this.isMouseMovingTimer = setTimeout(() => {\n            this.isMouseMoving = false;\n        }, this.isMouseMovingTimeout);\n    }\n\n    evTimeUpdate(event: any): void {\n        this.time = this.getVideoTag().currentTime;\n    }\n\n    getOverlayClass(activeClass: string, inactiveClass: string): any {\n        if (this.overlay === null) {\n            return (!this.playing || this.isMouseMoving) ? activeClass : inactiveClass;\n        } else {\n            return this.overlay ? activeClass : inactiveClass;\n        }\n    }\n\n    private setVideoSrc(src: string|MediaStream|MediaSource|Blob): void {\n        if (this.srcObjectURL) {\n            URL.revokeObjectURL(this.srcObjectURL);\n            this.srcObjectURL = null;\n        }\n\n        if (!this.video || !this.video.nativeElement) {\n            return;\n        }\n\n        if (!src) {\n            this.video.nativeElement.src = null;\n            if ('srcObject' in HTMLVideoElement.prototype) {\n                this.video.nativeElement.srcObject = new MediaStream();\n            }\n        } else if (typeof src === 'string') {\n            this.video.nativeElement.src = src;\n        } else if ('srcObject' in HTMLVideoElement.prototype) {\n            this.video.nativeElement.srcObject = src;\n        } else {\n            this.srcObjectURL = URL.createObjectURL(src);\n            this.video.nativeElement.src = this.srcObjectURL;\n        }\n\n        if (this.volumeControl) {\n            this.volumeControl.updateMuted(false);\n        }\n    }\n\n}\n","import { Directive, ElementRef, Host, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { MatVideoComponent } from '../video.component';\n\n@Directive({\n  selector: '[matVideoSource]'\n})\nexport class MatVideoSourceDirective implements OnChanges {\n  @Input() src: string = null;\n  @Input() type: string = null;\n\n  private init = true;\n  private video: MatVideoComponent;\n  private source: HTMLSourceElement;\n\n  constructor(\n    @Host() private matVideoComponent: MatVideoComponent,\n    private el: ElementRef\n  ) {\n    this.video = matVideoComponent;\n    this.source = el.nativeElement;\n    this.init = false;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.source.src = this.src;\n    this.source.type = this.type;\n\n    if (!this.init)\n      this.video.load();\n  }\n\n}\n","import { Directive, ElementRef, Host, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { MatVideoComponent } from '../video.component';\n\n@Directive({\n    selector: '[matVideoTrack]'\n})\nexport class MatVideoTrackDirective implements OnChanges {\n    @Input() src: string = null;\n    @Input() kind: string = null;\n    @Input() srclang: string = null;\n    @Input() label: string = null;\n\n    private init = true;\n    private video: MatVideoComponent;\n    private track: HTMLTrackElement;\n\n    constructor(\n        @Host() private matVideoComponent: MatVideoComponent,\n        private el: ElementRef\n    ) {\n        this.video = matVideoComponent;\n        this.track = el.nativeElement;\n        this.init = false;\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        this.track.src = this.src;\n        this.track.kind = this.kind;\n        this.track.srclang = this.srclang;\n        this.track.label = this.label;\n\n        if (!this.init)\n            this.video.load();\n    }\n\n}\n","import { Component, Input, Output, EventEmitter, ElementRef, ChangeDetectorRef, ViewEncapsulation, ChangeDetectionStrategy, Optional, Attribute } from '@angular/core';\nimport { MatSlider, MAT_SLIDER_VALUE_ACCESSOR } from '@angular/material/slider';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\n\n/** Counter used to generate unique IDs for progress bars. */\nlet sliderprogressbarId = 0;\n\n@Component({\n    selector: 'mat-slider-progress-bar',\n    templateUrl: './mat-slider-progress-bar.component.html',\n    styleUrls: ['./mat-slider-progress-bar.component.css'],\n    providers: [MAT_SLIDER_VALUE_ACCESSOR],\n    host: {\n        '(focus)': '_onFocus()',\n        '(blur)': '_onBlur()',\n        '(click)': 'this[\"_onClick\"] ? this[\"_onClick\"]($event) : null', // Angular 5/6 support\n        '(mousedown)': 'this[\"_onMousedown\"] ? this[\"_onMousedown\"]($event) : null', // Angular 7 support\n        '(keydown)': '_onKeydown($event)',\n        '(keyup)': '_onKeyup()',\n        '(mouseenter)': '_onMouseenter()',\n        'class': 'mat-slider',\n        'role': 'slider',\n        '[tabIndex]': 'tabIndex',\n        '[attr.aria-disabled]': 'disabled',\n        '[attr.aria-valuemax]': 'max',\n        '[attr.aria-valuemin]': 'min',\n        '[attr.aria-valuenow]': 'value',\n        '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n        '[class.mat-slider-disabled]': 'disabled',\n        '[class.mat-slider-has-ticks]': 'tickInterval',\n        '[class.mat-slider-horizontal]': '!vertical',\n        '[class.mat-slider-axis-inverted]': '_invertAxis',\n        '[class.mat-slider-sliding]': '_isSliding',\n        '[class.mat-slider-thumb-label-showing]': 'thumbLabel',\n        '[class.mat-slider-vertical]': 'vertical',\n        '[class.mat-slider-min-value]': '_isMinValue',\n        '[class.mat-slider-hide-last-tick]': 'disabled || _isMinValue && _thumbGap && _invertAxis',\n    },\n    inputs: ['disabled', 'color', 'tabIndex'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\n\nexport class MatSliderProgressBarComponent extends MatSlider {\n    @Input() mode: string = 'buffer';\n    @Input() value: number = 0;\n    /** Buffer value of the progress bar. Defaults to zero. */\n    @Input()\n    get bufferValue(): number { return this._bufferValue; }\n    set bufferValue(v: number) { this._bufferValue = clamp(v || 0); }\n    private _bufferValue: number = 0;\n\n    /** The id of the progress bar. */\n    sliderprogressbarId = `mat-slider-progress-bar-${sliderprogressbarId++}`;\n\n    constructor(\n        elementRef: ElementRef,\n        focusMonitor: FocusMonitor,\n        changeDetectorRef: ChangeDetectorRef,\n        @Optional() dir: Directionality,\n        @Attribute('tabindex') tabIndex: string\n    ) {\n        super(elementRef, focusMonitor, changeDetectorRef, dir, tabIndex);\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n\n    /** CSS styles for the track fill element. */\n    get _trackBufferStyles(): { [key: string]: string } {\n        if (this.mode === 'buffer') {\n            const axis = this.vertical ? 'Y' : 'X';\n            return {\n                'transform': `translate${axis}(0px) scale${axis}(${this._bufferValue / 100})`\n            };\n        }\n    }\n}\n\n/** Clamps a value to be between two numbers, by default 0 and 100. */\nfunction clamp(v: number, min = 0, max = 100) {\n    return Math.max(min, Math.min(max, v));\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'secondsToTime'\n})\nexport class SecondsToTimePipe implements PipeTransform {\n    times = {\n        year: 31557600,\n        month: 2629746,\n        day: 86400,\n        hour: 3600,\n    };\n\n    transform(seconds: number) {\n        if (!seconds)\n            return '0:00';\n        else {\n            let time_string: string = '';\n            for (const key in this.times) {\n                if (Math.floor(seconds / this.times[key]) > 0) {\n                    time_string += Math.floor(seconds / this.times[key]).toString() + ':';\n                    seconds = seconds - this.times[key] * Math.floor(seconds / this.times[key]);\n                }\n            }\n            time_string += Math.floor(seconds / 60).toString() + ':';\n            seconds = seconds - 60 * Math.floor(seconds / 60);\n            if (Math.floor(seconds) < 10) time_string += '0';\n            time_string += Math.floor(seconds).toString();\n            return time_string;\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { FullscreenControls } from '../interfaces/fullscreen-controls.interface';\n\n@Injectable()\nexport class FullscreenService {\n\n    private fnMap: string[][] = [\n        // Object keys\n        [\n            'requestFullscreen',\n            'exitFullscreen',\n            'fullscreenElement',\n            'fullscreenEnabled',\n            'fullscreenchange',\n            'fullscreenerror'\n        ],\n        // New WebKit\n        [\n            'webkitRequestFullscreen',\n            'webkitExitFullscreen',\n            'webkitFullscreenElement',\n            'webkitFullscreenEnabled',\n            'webkitfullscreenchange',\n            'webkitfullscreenerror'\n\n        ],\n        // Old WebKit (Safari 5.1)\n        [\n            'webkitRequestFullScreen',\n            'webkitCancelFullScreen',\n            'webkitCurrentFullScreenElement',\n            'webkitCancelFullScreen',\n            'webkitfullscreenchange',\n            'webkitfullscreenerror'\n\n        ],\n        // Mozilla\n        [\n            'mozRequestFullScreen',\n            'mozCancelFullScreen',\n            'mozFullScreenElement',\n            'mozFullScreenEnabled',\n            'mozfullscreenchange',\n            'mozfullscreenerror'\n        ],\n        // MS\n        [\n            'msRequestFullscreen',\n            'msExitFullscreen',\n            'msFullscreenElement',\n            'msFullscreenEnabled',\n            'MSFullscreenChange',\n            'MSFullscreenError'\n        ]\n    ];\n\n    private fn: FullscreenControls;\n    private keyboardAllowed: boolean;\n\n    constructor() {\n        this.keyboardAllowed = typeof Element !== 'undefined' && 'ALLOW_KEYBOARD_INPUT' in Element;\n        const ret: any = {};\n        let val;\n\n        for (let i = 0; i < this.fnMap.length; i++) {\n            val = this.fnMap[i];\n            if (val && val[1] in document) {\n                for (i = 0; i < val.length; i++) {\n                    // Map everything to the first list of keys\n                    ret[this.fnMap[0][i].toString()] = val[i];\n                }\n                this.fn = ret;\n            }\n        }\n    }\n\n    public request(elem: any) {\n        const request = this.fn.requestFullscreen;\n\n        elem = elem || document.documentElement;\n\n        // Work around Safari 5.1 bug: reports support for\n        // keyboard in fullscreen even though it doesn't.\n        // Browser sniffing, since the alternative with\n        // setTimeout is even worse.\n        if (/5\\.1[.\\d]* Safari/.test(navigator.userAgent)) {\n            elem[request]();\n        } else {\n            elem[request](this.keyboardAllowed ? (Element as any).ALLOW_KEYBOARD_INPUT : {});\n        }\n    }\n\n    public exit() {\n        document[this.fn.exitFullscreen]();\n    }\n\n    public toggle(elem: any) {\n        if (this.isFullscreen()) {\n            this.exit();\n        } else {\n            this.request(elem);\n        }\n    }\n\n    public onChange(callback: any) {\n        document.addEventListener(this.fn.fullscreenchange, callback, false);\n    }\n\n    public onError(callback: any) {\n        document.addEventListener(this.fn.fullscreenerror, callback, false);\n    }\n\n    public isFullscreen() {\n        return Boolean(document[this.fn.fullscreenElement]);\n    }\n\n    public isEnabled() {\n        // Coerce to boolean in case of old WebKit\n        return Boolean(document[this.fn.fullscreenEnabled]);\n    }\n\n    public getElement() {\n        return document[this.fn.fullscreenElement];\n    }\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'mat-download-button',\n  templateUrl: './mat-download-button.component.html',\n  styleUrls: ['./mat-download-button.component.css']\n})\nexport class MatDownloadButtonComponent {\n  @Input() video: HTMLVideoElement;\n  @Input() title: string;\n\n  constructor() { }\n\n}\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'mat-frame-by-frame-control',\n    templateUrl: './mat-frame-by-frame-control.component.html',\n    styleUrls: ['./mat-frame-by-frame-control.component.css']\n})\nexport class MatFrameByFrameControlComponent implements OnInit {\n    @Input() video: HTMLVideoElement;\n    @Input() fps: number = 29.97;\n\n    constructor() { }\n\n    ngOnInit() {\n    }\n\n    seekFrames(nbFrames: number) {\n        if (!this.video.paused) {\n            this.video.pause();\n        }\n\n        const currentFrames = this.video.currentTime * this.fps;\n        const newPos = ((currentFrames + nbFrames) / this.fps) + 0.00001;\n        this.video.currentTime = newPos;\n    }\n\n}\n","import { Component, EventEmitter, HostListener, Input, OnInit, Output } from '@angular/core';\n\nimport { EventService } from '../../services/event.service';\nimport { FullscreenService } from '../../services/fullscreen.service';\n\n@Component({\n  selector: 'mat-fullscreen-button',\n  templateUrl: './mat-fullscreen-button.component.html',\n  styleUrls: ['./mat-fullscreen-button.component.css']\n})\nexport class MatFullscreenButtonComponent implements OnInit {\n  canFullscreen: boolean = false;\n\n  @Input() player: HTMLVideoElement;\n\n  @Input() fullscreen: boolean = false;\n\n  @Output() fullscreenChanged = new EventEmitter<boolean>();\n\n  @Input() keyboard: boolean = true;\n\n  constructor(\n    private fscreen: FullscreenService,\n    private evt: EventService\n  ) { }\n\n  ngOnInit(): void {\n    if (this.fscreen.isEnabled())\n      this.canFullscreen = true;\n\n    this.fscreen.onChange(event => this.fscreen.isFullscreen() ? this.onChangesFullscreen(true) : this.onChangesFullscreen(false));\n  }\n\n  setFullscreen(value: boolean) {\n    if (this.canFullscreen && this.fullscreen !== value)\n      this.toggleFullscreen();\n  }\n\n  toggleFullscreen(): void {\n    this.fullscreen = !this.fullscreen;\n    this.updateFullscreen();\n  }\n\n  updateFullscreen(): void {\n    this.fullscreen ? this.fscreen.request(this.player) : this.fscreen.exit();\n    this.fullscreenChanged.emit(this.fullscreen);\n  }\n\n  onChangesFullscreen(value: boolean): void {\n    this.fullscreen = value;\n    this.fullscreenChanged.emit(this.fullscreen);\n  }\n\n  @HostListener('document:keyup.f', ['$event'])\n  onFullscreenKey(event: KeyboardEvent) {\n    if (this.keyboard) {\n      this.toggleFullscreen();\n      event.preventDefault();\n    }\n  }\n\n}\n","import { AfterViewInit, Component, EventEmitter, HostListener, Input, OnDestroy, Output, Renderer2 } from '@angular/core';\n\nimport { EventHandler } from '../../interfaces/event-handler.interface';\nimport { EventService } from '../../services/event.service';\n\n@Component({\n  selector: 'mat-play-button',\n  templateUrl: './mat-play-button.component.html',\n  styleUrls: ['./mat-play-button.component.css']\n})\nexport class MatPlayButtonComponent implements AfterViewInit, OnDestroy {\n  @Input() video: HTMLVideoElement;\n\n  @Input() play: boolean = false;\n\n  @Output() playChanged = new EventEmitter<boolean>();\n\n  @Input() keyboard: boolean = true;\n\n  private events: EventHandler[];\n\n  constructor(\n    private renderer: Renderer2,\n    private evt: EventService\n  ) { }\n\n  ngAfterViewInit(): void {\n    this.events = [\n      { element: this.video, name: 'play', callback: event => this.setVideoPlayback(true), dispose: null },\n      { element: this.video, name: 'pause', callback: event => this.setVideoPlayback(false), dispose: null },\n      { element: this.video, name: 'durationchange', callback: event => this.setVideoPlayback(false), dispose: null },\n      { element: this.video, name: 'ended', callback: event => this.setVideoPlayback(false), dispose: null },\n      { element: this.video, name: 'click', callback: event => this.toggleVideoPlayback(), dispose: null }\n    ];\n\n    this.evt.addEvents(this.renderer, this.events);\n  }\n\n  ngOnDestroy(): void {\n    this.evt.removeEvents(this.events);\n  }\n\n  setVideoPlayback(value: boolean) {\n    if (this.play !== value)\n      this.toggleVideoPlayback();\n  }\n\n  toggleVideoPlayback(): void {\n    this.play = !this.play;\n    this.updateVideoPlayback();\n  }\n\n  updateVideoPlayback(): void {\n    this.play ? this.video.play() : this.video.pause();\n    this.playChanged.emit(this.play);\n  }\n\n  @HostListener('document:keyup.space', ['$event'])\n  onPlayKey(event: KeyboardEvent) {\n    if (this.keyboard) {\n      this.toggleVideoPlayback();\n      event.preventDefault();\n    }\n  }\n\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'mat-quality-control',\n  templateUrl: './mat-quality-control.component.html',\n  styleUrls: ['./mat-quality-control.component.css']\n})\nexport class MatQualityControlComponent {\n  @Input() video: HTMLVideoElement;\n\n  constructor() { }\n\n}\n","import { AfterViewInit, Component, EventEmitter, Input, OnDestroy, Output, Renderer2 } from '@angular/core';\nimport { ThemePalette } from '@angular/material/core';\n\nimport { EventHandler } from '../../interfaces/event-handler.interface';\nimport { EventService } from '../../services/event.service';\n\n@Component({\n  selector: 'mat-seek-progress-control',\n  templateUrl: './mat-seek-progress-control.component.html',\n  styleUrls: ['./mat-seek-progress-control.component.css']\n})\nexport class MatSeekProgressControlComponent implements AfterViewInit, OnDestroy {\n  curTimePercent: number = 0;\n  bufTimePercent: number = 0;\n\n  @Input() video: HTMLVideoElement = null;\n\n  @Input() color: ThemePalette = 'primary';\n\n  @Input() currentTime: number = 0;\n\n  @Output() currentTimeChanged = new EventEmitter<number>();\n\n  @Input() bufferedTime: number = 0;\n\n  @Output() bufferedTimeChanged = new EventEmitter<number>();\n\n  private events: EventHandler[];\n\n  constructor(\n    private renderer: Renderer2,\n    private evt: EventService\n  ) { }\n\n  ngAfterViewInit(): void {\n    this.events = [\n      { element: this.video, name: 'seeking', callback: event => this.updateCurrentTime(this.video.currentTime), dispose: null },\n      { element: this.video, name: 'canplaythrough', callback: event => this.updateBufferedTime(), dispose: null },\n      { element: this.video, name: 'timeupdate', callback: event => this.updateCurrentTime(this.video.currentTime), dispose: null },\n      { element: this.video, name: 'progress', callback: event => this.updateBufferedTime(), dispose: null }\n    ];\n\n    this.evt.addEvents(this.renderer, this.events);\n  }\n\n  ngOnDestroy(): void {\n    this.evt.removeEvents(this.events);\n  }\n\n  seekVideo(value: number): void {\n    const percentage = value / 100;\n    const newTime = this.video.duration * percentage;\n    this.video.currentTime = newTime;\n  }\n\n  updateCurrentTime(time: number): void {\n    this.currentTime = time;\n    this.curTimePercent = this.updateTime(this.currentTimeChanged, this.currentTime);\n  }\n\n  updateBufferedTime(): void {\n    if (this.video.buffered.length > 0) {\n      let largestBufferValue = 0;\n      for (let i = 0; i < this.video.buffered.length; i++) {\n        const cur = this.video.currentTime;\n        const start = this.video.buffered.start(i);\n        const end = this.video.buffered.end(i);\n        if (start <= cur && end > cur && (end - start) > largestBufferValue)\n          largestBufferValue = end;\n      }\n      this.bufferedTime = largestBufferValue;\n      this.bufTimePercent = this.updateTime(this.bufferedTimeChanged, this.bufferedTime);\n    }\n  }\n\n  updateTime(emitter: EventEmitter<number>, time: number): number {\n    emitter.emit(time);\n    return time / this.video.duration * 100;\n  }\n\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'mat-time-control',\n  templateUrl: './mat-time-control.component.html',\n  styleUrls: ['./mat-time-control.component.css']\n})\nexport class MatTimeControlComponent {\n  @Input() video: HTMLVideoElement;\n\n  constructor() { }\n\n}\n","import { AfterViewInit, Component, Input, OnDestroy, Renderer2 } from '@angular/core';\n\nimport { EventHandler } from '../../interfaces/event-handler.interface';\nimport { EventService } from '../../services/event.service';\n\n@Component({\n  selector: 'mat-video-spinner',\n  templateUrl: './mat-video-spinner.component.html',\n  styleUrls: [\n    './mat-video-spinner.component.scss',\n    './indicators/spin.css',\n    './indicators/dot.css',\n    './indicators/split-ring.css',\n    './indicators/hourglass.css'\n  ]\n})\nexport class MatVideoSpinnerComponent implements AfterViewInit, OnDestroy {\n  @Input() video: HTMLVideoElement;\n  @Input() spinner: string = 'spin';\n\n  videoBuffering = false;\n  videoLoaded = false;\n\n  private events: EventHandler[] = [];\n\n  constructor(\n    private renderer: Renderer2,\n    private evt: EventService\n  ) { }\n\n  ngAfterViewInit(): void {\n    this.events = [\n      { element: this.video, name: 'loadstart', callback: event => this.videoLoaded = false, dispose: null },\n      { element: this.video, name: 'loadedmetadata', callback: event => this.videoLoaded = true, dispose: null },\n      { element: this.video, name: 'canplay', callback: event => this.videoBuffering = false, dispose: null },\n      { element: this.video, name: 'waiting', callback: event => this.videoBuffering = true, dispose: null },\n      { element: this.video, name: 'durationchange', callback: event => this.videoBuffering = true, dispose: null }\n    ];\n\n    this.video.onloadeddata = () => this.videoLoaded = true;\n\n    this.evt.addEvents(this.renderer, this.events);\n  }\n\n  ngOnDestroy(): void {\n    this.video.onloadeddata = null;\n\n    this.evt.removeEvents(this.events);\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSliderModule } from '@angular/material/slider';\n\nimport { MatVideoSourceDirective } from './directives/mat-video-source.directive';\nimport { MatVideoTrackDirective } from './directives/mat-video-track.directive';\nimport { MatSliderProgressBarComponent } from './internal/mat-slider-progress-bar/mat-slider-progress-bar.component';\nimport { SecondsToTimePipe } from './pipes/seconds-to-time.pipe';\nimport { EventService } from './services/event.service';\nimport { FullscreenService } from './services/fullscreen.service';\nimport { MatDownloadButtonComponent } from './ui/mat-download-button/mat-download-button.component';\nimport { MatFrameByFrameControlComponent } from './ui/mat-frame-by-frame-control/mat-frame-by-frame-control.component';\nimport { MatFullscreenButtonComponent } from './ui/mat-fullscreen-button/mat-fullscreen-button.component';\nimport { MatPlayButtonComponent } from './ui/mat-play-button/mat-play-button.component';\nimport { MatQualityControlComponent } from './ui/mat-quality-control/mat-quality-control.component';\nimport { MatSeekProgressControlComponent } from './ui/mat-seek-progress-control/mat-seek-progress-control.component';\nimport { MatTimeControlComponent } from './ui/mat-time-control/mat-time-control.component';\nimport { MatVideoSpinnerComponent } from './ui/mat-video-spinner/mat-video-spinner.component';\nimport { MatVolumeControlComponent } from './ui/mat-volume-control/mat-volume-control.component';\nimport { MatVideoComponent } from './video.component';\n\n@NgModule({\n    declarations: [\n        SecondsToTimePipe,\n        MatVideoComponent,\n        MatSliderProgressBarComponent,\n        MatPlayButtonComponent,\n        MatVolumeControlComponent,\n        MatDownloadButtonComponent,\n        MatFullscreenButtonComponent,\n        MatTimeControlComponent,\n        MatQualityControlComponent,\n        MatVideoSpinnerComponent,\n        MatSeekProgressControlComponent,\n        MatVideoSourceDirective,\n        MatVideoTrackDirective,\n        MatFrameByFrameControlComponent\n    ],\n    imports: [\n        CommonModule,\n        MatIconModule,\n        MatButtonModule,\n        MatSliderModule,\n    ],\n    exports: [\n        MatVideoComponent,\n        MatVideoSourceDirective,\n        MatVideoTrackDirective\n    ],\n    providers: [\n        FullscreenService,\n        EventService\n    ]\n})\nexport class MatVideoModule { }\n"]}