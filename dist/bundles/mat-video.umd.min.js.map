{"version":3,"sources":["../../node_modules/tslib/tslib.es6.js","ng://mat-video/app/video/services/event.service.ts","ng://mat-video/app/video/video.component.ts","ng://mat-video/app/video/directives/mat-video-source.directive.ts","ng://mat-video/app/video/directives/mat-video-track.directive.ts","ng://mat-video/app/video/internal/mat-slider-progress-bar/mat-slider-progress-bar.component.ts","ng://mat-video/app/video/pipes/seconds-to-time.pipe.ts","ng://mat-video/app/video/services/fullscreen.service.ts","ng://mat-video/app/video/ui/mat-download-button/mat-download-button.component.ts","ng://mat-video/app/video/ui/mat-frame-by-frame-control/mat-frame-by-frame-control.component.ts","ng://mat-video/app/video/ui/mat-fullscreen-button/mat-fullscreen-button.component.ts","ng://mat-video/app/video/ui/mat-play-button/mat-play-button.component.ts","ng://mat-video/app/video/ui/mat-quality-control/mat-quality-control.component.ts","ng://mat-video/app/video/ui/mat-seek-progress-control/mat-seek-progress-control.component.ts","ng://mat-video/app/video/ui/mat-time-control/mat-time-control.component.ts","ng://mat-video/app/video/ui/mat-video-spinner/mat-video-spinner.component.ts","ng://mat-video/app/video/ui/mat-volume-control/mat-volume-control.component.ts","ng://mat-video/app/video/video.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","__values","o","s","Symbol","iterator","m","call","next","value","done","TypeError","EventService","prototype","addEvents","renderer","events","event_1","dispose","listen","element","name","newEvent","callback","events_1","tslib_1.__values","events_1_1","removeEvents","events_2","events_2_1","event_2","Injectable","MatVideoComponent","evt","this","src","title","autoplay","preload","loop","quality","fullscreen","playsinline","showFrameByFrame","fps","download","color","spinner","poster","keyboard","overlay","muted","mutedChange","EventEmitter","timeChange","playing","isFullscreen","videoLoaded","isMouseMoving","isMouseMovingTimeout","getVideoTag","currentTime","val","_this","video","duration","lastTime","setTimeout","emit","ngAfterViewInit","nativeElement","event","evLoadedMetadata","console","error","preventDefault","evTimeUpdate","player","evMouseMove","onloadeddata","setVideoSrc","ngOnChanges","changes","ngOnDestroy","load","videoWidth","videoHeight","clearTimeout","isMouseMovingTimer","time","getOverlayClass","activeClass","inactiveClass","HTMLVideoElement","srcObject","srcObjectURL","URL","revokeObjectURL","createObjectURL","Renderer2","tslib_1.__decorate","ViewChild","Input","Output","Component","selector","template","MatVideoSourceDirective","matVideoComponent","el","type","init","source","Host","ElementRef","Directive","tslib_1.__param","MatVideoTrackDirective","kind","srclang","label","track","sliderprogressbarId","MatSliderProgressBarComponent","_super","elementRef","focusMonitor","changeDetectorRef","dir","tabIndex","mode","_bufferValue","parseInt","__","constructor","create","tslib_1.__extends","v","min","max","Math","clamp","axis","vertical","transform","FocusMonitor","ChangeDetectorRef","Directionality","Optional","Attribute","args","providers","MAT_SLIDER_VALUE_ACCESSOR","host","(focus)","(blur)","(click)","(mousedown)","(keydown)","(keyup)","(mouseenter)","class","role","[tabIndex]","[attr.aria-disabled]","[attr.aria-valuemax]","[attr.aria-valuemin]","[attr.aria-valuenow]","[attr.aria-orientation]","[class.mat-slider-disabled]","[class.mat-slider-has-ticks]","[class.mat-slider-horizontal]","[class.mat-slider-axis-inverted]","[class.mat-slider-sliding]","[class.mat-slider-thumb-label-showing]","[class.mat-slider-vertical]","[class.mat-slider-min-value]","[class.mat-slider-hide-last-tick]","inputs","changeDetection","ChangeDetectionStrategy","OnPush","MatSlider","SecondsToTimePipe","times","year","month","day","hour","seconds","time_string","floor","toString","Pipe","FullscreenService","fnMap","keyboardAllowed","Element","ret","document","fn","request","elem","requestFullscreen","documentElement","test","navigator","userAgent","ALLOW_KEYBOARD_INPUT","exit","exitFullscreen","toggle","onChange","addEventListener","fullscreenchange","onError","fullscreenerror","Boolean","fullscreenElement","isEnabled","fullscreenEnabled","getElement","MatDownloadButtonComponent","MatFrameByFrameControlComponent","ngOnInit","seekFrames","nbFrames","paused","pause","newPos","MatFullscreenButtonComponent","fscreen","canFullscreen","fullscreenChanged","onChangesFullscreen","setFullscreen","toggleFullscreen","updateFullscreen","onFullscreenKey","HostListener","MatPlayButtonComponent","play","playChanged","setVideoPlayback","toggleVideoPlayback","updateVideoPlayback","onPlayKey","MatQualityControlComponent","MatSeekProgressControlComponent","curTimePercent","bufTimePercent","currentTimeChanged","bufferedTime","bufferedTimeChanged","updateCurrentTime","updateBufferedTime","seekVideo","percentage","newTime","updateTime","buffered","largestBufferValue","cur","start","end","emitter","MatTimeControlComponent","MatVideoSpinnerComponent","videoBuffering","MatVolumeControlComponent","volume","volumeChanged","_muted","mutedChanged","setVolume","setMuted","toggleMuted","updateMuted","onMuteKey","MatVideoModule","NgModule","declarations","imports","CommonModule","MatIconModule","MatButtonModule","MatSliderModule","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Injectable, Renderer2 } from '@angular/core';\nimport { EventHandler } from '../interfaces/event-handler.interface';\n\n@Injectable()\nexport class EventService {\n\n    constructor() { }\n\n    addEvents(renderer: Renderer2, events: EventHandler[]): void {\n        for (const event of events)\n            event.dispose = renderer.listen(event.element, event.name, newEvent => event.callback(newEvent));\n    }\n\n    removeEvents(events: EventHandler[]): void {\n        for (const event of events)\n            if (event.dispose)\n                event.dispose();\n    }\n\n}\n","import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnDestroy,\n    Output,\n    Renderer2,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { ThemePalette } from '@angular/material/core';\n\nimport { EventHandler } from './interfaces/event-handler.interface';\nimport { EventService } from './services/event.service';\n\n@Component({\n    selector: 'mat-video',\n    templateUrl: './video.component.html',\n    styleUrls: ['./video.component.css', './styles/icons.css']\n})\nexport class MatVideoComponent implements AfterViewInit, OnChanges, OnDestroy {\n    @ViewChild('player') private player: ElementRef;\n    @ViewChild('video') private video: ElementRef;\n\n    @Input() src: string|MediaStream|MediaSource|Blob = null;\n    @Input() title: string = null;\n    @Input() autoplay: boolean = false;\n    @Input() preload: boolean = true;\n    @Input() loop: boolean = false;\n    @Input() quality: boolean = true;\n    @Input() fullscreen: boolean = true;\n    @Input() playsinline: boolean = false;\n    @Input() showFrameByFrame: boolean = false;\n    @Input() fps: number = 29.97;\n    @Input() download: boolean = false;\n    @Input() color: ThemePalette = 'primary';\n    @Input() spinner: string = 'spin';\n    @Input() poster: string = null;\n    @Input() keyboard: boolean = true;\n    @Input() overlay: boolean = null;\n    @Input() muted: boolean = false;\n    @Output() mutedChange = new EventEmitter<boolean>();\n\n\n    @Input()\n    get time() {\n        return this.getVideoTag().currentTime;\n    }\n\n    @Output() timeChange = new EventEmitter<number>();\n    set time(val: number) {\n        const video: HTMLVideoElement = this.getVideoTag();\n        if (video && val) {\n            if (val > video.duration) {\n                val = video.duration;\n            }\n            if (val < 0) {\n                val = 0;\n            }\n            if (val !== video.currentTime) {\n                video.currentTime = val;\n            }\n            if (this.lastTime !== video.currentTime) {\n                setTimeout(() => this.timeChange.emit(video.currentTime), 0);\n                this.lastTime = video.currentTime;\n            }\n        }\n    }\n\n    playing: boolean = false;\n\n    isFullscreen: boolean = false;\n\n    videoWidth: number;\n    videoHeight: number;\n    lastTime: number;\n\n    videoLoaded = false;\n\n    private isMouseMoving: boolean = false;\n    private isMouseMovingTimer: NodeJS.Timer;\n    private isMouseMovingTimeout: number = 2000;\n\n    private events: EventHandler[];\n\n    private srcObjectURL: string;\n\n    constructor(\n        private renderer: Renderer2,\n        private evt: EventService\n    ) { }\n\n    ngAfterViewInit(): void {\n        this.events = [\n            { element: this.video.nativeElement, name: 'loadstart', callback: event => this.videoLoaded = false, dispose: null },\n            { element: this.video.nativeElement, name: 'loadedmetadata', callback: event => this.evLoadedMetadata(event), dispose: null },\n            { element: this.video.nativeElement, name: 'error', callback: event => console.error('Unhandled Video Error', event), dispose: null },\n            { element: this.video.nativeElement, name: 'contextmenu', callback: event => event.preventDefault(), dispose: null },\n            { element: this.video.nativeElement, name: 'timeupdate', callback: event => this.evTimeUpdate(event), dispose: null },\n            { element: this.player.nativeElement, name: 'mousemove', callback: event => this.evMouseMove(event), dispose: null }\n        ];\n\n        this.video.nativeElement.onloadeddata = () => this.videoLoaded = true;\n\n        this.evt.addEvents(this.renderer, this.events);\n        this.setVideoSrc(this.src);\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes.src) {\n            this.setVideoSrc(this.src);\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.video.nativeElement.onloadeddata = null;\n\n        this.evt.removeEvents(this.events);\n        this.setVideoSrc(null);\n    }\n\n    load(): void {\n        if (this.video && this.video.nativeElement)\n            this.video.nativeElement.load();\n    }\n\n    getVideoTag(): HTMLVideoElement | null {\n        return this.video && this.video.nativeElement ? this.video.nativeElement as HTMLVideoElement : null;\n    }\n\n    evLoadedMetadata(event: any): void {\n        this.videoWidth = this.video.nativeElement.videoWidth;\n        this.videoHeight = this.video.nativeElement.videoHeight;\n        this.videoLoaded = true;\n    }\n\n    evMouseMove(event: any): void {\n        this.isMouseMoving = true;\n        clearTimeout(this.isMouseMovingTimer);\n        this.isMouseMovingTimer = setTimeout(() => {\n            this.isMouseMoving = false;\n        }, this.isMouseMovingTimeout);\n    }\n\n    evTimeUpdate(event: any): void {\n        this.time = this.getVideoTag().currentTime;\n    }\n\n    getOverlayClass(activeClass: string, inactiveClass: string): any {\n        if (this.overlay === null) {\n            return (!this.playing || this.isMouseMoving) ? activeClass : inactiveClass;\n        } else {\n            return this.overlay ? activeClass : inactiveClass;\n        }\n    }\n\n    private setVideoSrc(src: string|MediaStream|MediaSource|Blob): void {\n        this.video.nativeElement.src = null;\n        if ('srcObject' in HTMLVideoElement.prototype) {\n            this.video.nativeElement.srcObject = null;\n        }\n\n        if (this.srcObjectURL) {\n            URL.revokeObjectURL(this.srcObjectURL);\n            this.srcObjectURL = null;\n        }\n\n        if (!src) {\n            return;\n        }\n\n        if (typeof src === 'string') {\n            this.video.nativeElement.src = src;\n        } else if ('srcObject' in HTMLVideoElement.prototype) {\n            this.video.nativeElement.srcObject = src;\n        } else {\n            this.srcObjectURL = URL.createObjectURL(src);\n            this.video.nativeElement.src = this.srcObjectURL;\n        }\n    }\n\n}\n","import { Directive, ElementRef, Host, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { MatVideoComponent } from '../video.component';\n\n@Directive({\n  selector: '[matVideoSource]'\n})\nexport class MatVideoSourceDirective implements OnChanges {\n  @Input() src: string = null;\n  @Input() type: string = null;\n\n  private init = true;\n  private video: MatVideoComponent;\n  private source: HTMLSourceElement;\n\n  constructor(\n    @Host() private matVideoComponent: MatVideoComponent,\n    private el: ElementRef\n  ) {\n    this.video = matVideoComponent;\n    this.source = el.nativeElement;\n    this.init = false;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.source.src = this.src;\n    this.source.type = this.type;\n\n    if (!this.init)\n      this.video.load();\n  }\n\n}\n","import { Directive, ElementRef, Host, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { MatVideoComponent } from '../video.component';\n\n@Directive({\n    selector: '[matVideoTrack]'\n})\nexport class MatVideoTrackDirective implements OnChanges {\n    @Input() src: string = null;\n    @Input() kind: string = null;\n    @Input() srclang: string = null;\n    @Input() label: string = null;\n\n    private init = true;\n    private video: MatVideoComponent;\n    private track: HTMLTrackElement;\n\n    constructor(\n        @Host() private matVideoComponent: MatVideoComponent,\n        private el: ElementRef\n    ) {\n        this.video = matVideoComponent;\n        this.track = el.nativeElement;\n        this.init = false;\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        this.track.src = this.src;\n        this.track.kind = this.kind;\n        this.track.srclang = this.srclang;\n        this.track.label = this.label;\n\n        if (!this.init)\n            this.video.load();\n    }\n\n}\n","import { Component, Input, Output, EventEmitter, ElementRef, ChangeDetectorRef, ViewEncapsulation, ChangeDetectionStrategy, Optional, Attribute } from '@angular/core';\nimport { MatSlider, MAT_SLIDER_VALUE_ACCESSOR } from '@angular/material/slider';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\n\n/** Counter used to generate unique IDs for progress bars. */\nlet sliderprogressbarId = 0;\n\n@Component({\n    selector: 'mat-slider-progress-bar',\n    templateUrl: './mat-slider-progress-bar.component.html',\n    styleUrls: ['./mat-slider-progress-bar.component.css'],\n    providers: [MAT_SLIDER_VALUE_ACCESSOR],\n    host: {\n        '(focus)': '_onFocus()',\n        '(blur)': '_onBlur()',\n        '(click)': 'this[\"_onClick\"] ? this[\"_onClick\"]($event) : null', // Angular 5/6 support\n        '(mousedown)': 'this[\"_onMousedown\"] ? this[\"_onMousedown\"]($event) : null', // Angular 7 support\n        '(keydown)': '_onKeydown($event)',\n        '(keyup)': '_onKeyup()',\n        '(mouseenter)': '_onMouseenter()',\n        'class': 'mat-slider',\n        'role': 'slider',\n        '[tabIndex]': 'tabIndex',\n        '[attr.aria-disabled]': 'disabled',\n        '[attr.aria-valuemax]': 'max',\n        '[attr.aria-valuemin]': 'min',\n        '[attr.aria-valuenow]': 'value',\n        '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n        '[class.mat-slider-disabled]': 'disabled',\n        '[class.mat-slider-has-ticks]': 'tickInterval',\n        '[class.mat-slider-horizontal]': '!vertical',\n        '[class.mat-slider-axis-inverted]': '_invertAxis',\n        '[class.mat-slider-sliding]': '_isSliding',\n        '[class.mat-slider-thumb-label-showing]': 'thumbLabel',\n        '[class.mat-slider-vertical]': 'vertical',\n        '[class.mat-slider-min-value]': '_isMinValue',\n        '[class.mat-slider-hide-last-tick]': 'disabled || _isMinValue && _thumbGap && _invertAxis',\n    },\n    inputs: ['disabled', 'color', 'tabIndex'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\n\nexport class MatSliderProgressBarComponent extends MatSlider {\n    @Input() mode: string = 'buffer';\n    @Input() value: number = 0;\n    /** Buffer value of the progress bar. Defaults to zero. */\n    @Input()\n    get bufferValue(): number { return this._bufferValue; }\n    set bufferValue(v: number) { this._bufferValue = clamp(v || 0); }\n    private _bufferValue: number = 0;\n\n    /** The id of the progress bar. */\n    sliderprogressbarId = `mat-slider-progress-bar-${sliderprogressbarId++}`;\n\n    constructor(\n        elementRef: ElementRef,\n        focusMonitor: FocusMonitor,\n        changeDetectorRef: ChangeDetectorRef,\n        @Optional() dir: Directionality,\n        @Attribute('tabindex') tabIndex: string\n    ) {\n        super(elementRef, focusMonitor, changeDetectorRef, dir, tabIndex);\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n\n    /** CSS styles for the track fill element. */\n    get _trackBufferStyles(): { [key: string]: string } {\n        if (this.mode === 'buffer') {\n            const axis = this.vertical ? 'Y' : 'X';\n            return {\n                'transform': `translate${axis}(0px) scale${axis}(${this._bufferValue / 100})`\n            };\n        }\n    }\n}\n\n/** Clamps a value to be between two numbers, by default 0 and 100. */\nfunction clamp(v: number, min = 0, max = 100) {\n    return Math.max(min, Math.min(max, v));\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'secondsToTime'\n})\nexport class SecondsToTimePipe implements PipeTransform {\n    times = {\n        year: 31557600,\n        month: 2629746,\n        day: 86400,\n        hour: 3600,\n    };\n\n    transform(seconds: number) {\n        if (!seconds)\n            return '0:00';\n        else {\n            let time_string: string = '';\n            for (const key in this.times) {\n                if (Math.floor(seconds / this.times[key]) > 0) {\n                    time_string += Math.floor(seconds / this.times[key]).toString() + ':';\n                    seconds = seconds - this.times[key] * Math.floor(seconds / this.times[key]);\n                }\n            }\n            time_string += Math.floor(seconds / 60).toString() + ':';\n            seconds = seconds - 60 * Math.floor(seconds / 60);\n            if (Math.floor(seconds) < 10) time_string += '0';\n            time_string += Math.floor(seconds).toString();\n            return time_string;\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { FullscreenControls } from '../interfaces/fullscreen-controls.interface';\n\n@Injectable()\nexport class FullscreenService {\n\n    private fnMap: string[][] = [\n        // Object keys\n        [\n            'requestFullscreen',\n            'exitFullscreen',\n            'fullscreenElement',\n            'fullscreenEnabled',\n            'fullscreenchange',\n            'fullscreenerror'\n        ],\n        // New WebKit\n        [\n            'webkitRequestFullscreen',\n            'webkitExitFullscreen',\n            'webkitFullscreenElement',\n            'webkitFullscreenEnabled',\n            'webkitfullscreenchange',\n            'webkitfullscreenerror'\n\n        ],\n        // Old WebKit (Safari 5.1)\n        [\n            'webkitRequestFullScreen',\n            'webkitCancelFullScreen',\n            'webkitCurrentFullScreenElement',\n            'webkitCancelFullScreen',\n            'webkitfullscreenchange',\n            'webkitfullscreenerror'\n\n        ],\n        // Mozilla\n        [\n            'mozRequestFullScreen',\n            'mozCancelFullScreen',\n            'mozFullScreenElement',\n            'mozFullScreenEnabled',\n            'mozfullscreenchange',\n            'mozfullscreenerror'\n        ],\n        // MS\n        [\n            'msRequestFullscreen',\n            'msExitFullscreen',\n            'msFullscreenElement',\n            'msFullscreenEnabled',\n            'MSFullscreenChange',\n            'MSFullscreenError'\n        ]\n    ];\n\n    private fn: FullscreenControls;\n    private keyboardAllowed: boolean;\n\n    constructor() {\n        this.keyboardAllowed = typeof Element !== 'undefined' && 'ALLOW_KEYBOARD_INPUT' in Element;\n        const ret: any = {};\n        let val;\n\n        for (let i = 0; i < this.fnMap.length; i++) {\n            val = this.fnMap[i];\n            if (val && val[1] in document) {\n                for (i = 0; i < val.length; i++) {\n                    // Map everything to the first list of keys\n                    ret[this.fnMap[0][i].toString()] = val[i];\n                }\n                this.fn = ret;\n            }\n        }\n    }\n\n    public request(elem: any) {\n        const request = this.fn.requestFullscreen;\n\n        elem = elem || document.documentElement;\n\n        // Work around Safari 5.1 bug: reports support for\n        // keyboard in fullscreen even though it doesn't.\n        // Browser sniffing, since the alternative with\n        // setTimeout is even worse.\n        if (/5\\.1[.\\d]* Safari/.test(navigator.userAgent)) {\n            elem[request]();\n        } else {\n            elem[request](this.keyboardAllowed ? (Element as any).ALLOW_KEYBOARD_INPUT : {});\n        }\n    }\n\n    public exit() {\n        document[this.fn.exitFullscreen]();\n    }\n\n    public toggle(elem: any) {\n        if (this.isFullscreen()) {\n            this.exit();\n        } else {\n            this.request(elem);\n        }\n    }\n\n    public onChange(callback: any) {\n        document.addEventListener(this.fn.fullscreenchange, callback, false);\n    }\n\n    public onError(callback: any) {\n        document.addEventListener(this.fn.fullscreenerror, callback, false);\n    }\n\n    public isFullscreen() {\n        return Boolean(document[this.fn.fullscreenElement]);\n    }\n\n    public isEnabled() {\n        // Coerce to boolean in case of old WebKit\n        return Boolean(document[this.fn.fullscreenEnabled]);\n    }\n\n    public getElement() {\n        return document[this.fn.fullscreenElement];\n    }\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'mat-download-button',\n  templateUrl: './mat-download-button.component.html',\n  styleUrls: ['./mat-download-button.component.css']\n})\nexport class MatDownloadButtonComponent {\n  @Input() video: HTMLVideoElement;\n  @Input() title: string;\n\n  constructor() { }\n\n}\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'mat-frame-by-frame-control',\n    templateUrl: './mat-frame-by-frame-control.component.html',\n    styleUrls: ['./mat-frame-by-frame-control.component.css']\n})\nexport class MatFrameByFrameControlComponent implements OnInit {\n    @Input() video: HTMLVideoElement;\n    @Input() fps: number = 29.97;\n\n    constructor() { }\n\n    ngOnInit() {\n    }\n\n    seekFrames(nbFrames: number) {\n        if (!this.video.paused) {\n            this.video.pause();\n        }\n\n        const currentFrames = this.video.currentTime * this.fps;\n        const newPos = ((currentFrames + nbFrames) / this.fps) + 0.00001;\n        this.video.currentTime = newPos;\n    }\n\n}\n","import { Component, EventEmitter, HostListener, Input, OnInit, Output } from '@angular/core';\n\nimport { EventService } from '../../services/event.service';\nimport { FullscreenService } from '../../services/fullscreen.service';\n\n@Component({\n  selector: 'mat-fullscreen-button',\n  templateUrl: './mat-fullscreen-button.component.html',\n  styleUrls: ['./mat-fullscreen-button.component.css']\n})\nexport class MatFullscreenButtonComponent implements OnInit {\n  canFullscreen: boolean = false;\n\n  @Input() player: HTMLVideoElement;\n\n  @Input() fullscreen: boolean = false;\n\n  @Output() fullscreenChanged = new EventEmitter<boolean>();\n\n  @Input() keyboard: boolean = true;\n\n  constructor(\n    private fscreen: FullscreenService,\n    private evt: EventService\n  ) { }\n\n  ngOnInit(): void {\n    if (this.fscreen.isEnabled())\n      this.canFullscreen = true;\n\n    this.fscreen.onChange(event => this.fscreen.isFullscreen() ? this.onChangesFullscreen(true) : this.onChangesFullscreen(false));\n  }\n\n  setFullscreen(value: boolean) {\n    if (this.canFullscreen && this.fullscreen !== value)\n      this.toggleFullscreen();\n  }\n\n  toggleFullscreen(): void {\n    this.fullscreen = !this.fullscreen;\n    this.updateFullscreen();\n  }\n\n  updateFullscreen(): void {\n    this.fullscreen ? this.fscreen.request(this.player) : this.fscreen.exit();\n    this.fullscreenChanged.emit(this.fullscreen);\n  }\n\n  onChangesFullscreen(value: boolean): void {\n    this.fullscreen = value;\n    this.fullscreenChanged.emit(this.fullscreen);\n  }\n\n  @HostListener('document:keyup.f', ['$event'])\n  onFullscreenKey(event: KeyboardEvent) {\n    if (this.keyboard) {\n      this.toggleFullscreen();\n      event.preventDefault();\n    }\n  }\n\n}\n","import { AfterViewInit, Component, EventEmitter, HostListener, Input, OnDestroy, Output, Renderer2 } from '@angular/core';\n\nimport { EventHandler } from '../../interfaces/event-handler.interface';\nimport { EventService } from '../../services/event.service';\n\n@Component({\n  selector: 'mat-play-button',\n  templateUrl: './mat-play-button.component.html',\n  styleUrls: ['./mat-play-button.component.css']\n})\nexport class MatPlayButtonComponent implements AfterViewInit, OnDestroy {\n  @Input() video: HTMLVideoElement;\n\n  @Input() play: boolean = false;\n\n  @Output() playChanged = new EventEmitter<boolean>();\n\n  @Input() keyboard: boolean = true;\n\n  private events: EventHandler[];\n\n  constructor(\n    private renderer: Renderer2,\n    private evt: EventService\n  ) { }\n\n  ngAfterViewInit(): void {\n    this.events = [\n      { element: this.video, name: 'play', callback: event => this.setVideoPlayback(true), dispose: null },\n      { element: this.video, name: 'pause', callback: event => this.setVideoPlayback(false), dispose: null },\n      { element: this.video, name: 'durationchange', callback: event => this.setVideoPlayback(false), dispose: null },\n      { element: this.video, name: 'ended', callback: event => this.setVideoPlayback(false), dispose: null },\n      { element: this.video, name: 'click', callback: event => this.toggleVideoPlayback(), dispose: null }\n    ];\n\n    this.evt.addEvents(this.renderer, this.events);\n  }\n\n  ngOnDestroy(): void {\n    this.evt.removeEvents(this.events);\n  }\n\n  setVideoPlayback(value: boolean) {\n    if (this.play !== value)\n      this.toggleVideoPlayback();\n  }\n\n  toggleVideoPlayback(): void {\n    this.play = !this.play;\n    this.updateVideoPlayback();\n  }\n\n  updateVideoPlayback(): void {\n    this.play ? this.video.play() : this.video.pause();\n    this.playChanged.emit(this.play);\n  }\n\n  @HostListener('document:keyup.space', ['$event'])\n  onPlayKey(event: KeyboardEvent) {\n    if (this.keyboard) {\n      this.toggleVideoPlayback();\n      event.preventDefault();\n    }\n  }\n\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'mat-quality-control',\n  templateUrl: './mat-quality-control.component.html',\n  styleUrls: ['./mat-quality-control.component.css']\n})\nexport class MatQualityControlComponent {\n  @Input() video: HTMLVideoElement;\n\n  constructor() { }\n\n}\n","import { AfterViewInit, Component, EventEmitter, Input, OnDestroy, Output, Renderer2 } from '@angular/core';\nimport { ThemePalette } from '@angular/material/core';\n\nimport { EventHandler } from '../../interfaces/event-handler.interface';\nimport { EventService } from '../../services/event.service';\n\n@Component({\n  selector: 'mat-seek-progress-control',\n  templateUrl: './mat-seek-progress-control.component.html',\n  styleUrls: ['./mat-seek-progress-control.component.css']\n})\nexport class MatSeekProgressControlComponent implements AfterViewInit, OnDestroy {\n  curTimePercent: number = 0;\n  bufTimePercent: number = 0;\n\n  @Input() video: HTMLVideoElement = null;\n\n  @Input() color: ThemePalette = 'primary';\n\n  @Input() currentTime: number = 0;\n\n  @Output() currentTimeChanged = new EventEmitter<number>();\n\n  @Input() bufferedTime: number = 0;\n\n  @Output() bufferedTimeChanged = new EventEmitter<number>();\n\n  private events: EventHandler[];\n\n  constructor(\n    private renderer: Renderer2,\n    private evt: EventService\n  ) { }\n\n  ngAfterViewInit(): void {\n    this.events = [\n      { element: this.video, name: 'seeking', callback: event => this.updateCurrentTime(this.video.currentTime), dispose: null },\n      { element: this.video, name: 'canplaythrough', callback: event => this.updateBufferedTime(), dispose: null },\n      { element: this.video, name: 'timeupdate', callback: event => this.updateCurrentTime(this.video.currentTime), dispose: null },\n      { element: this.video, name: 'progress', callback: event => this.updateBufferedTime(), dispose: null }\n    ];\n\n    this.evt.addEvents(this.renderer, this.events);\n  }\n\n  ngOnDestroy(): void {\n    this.evt.removeEvents(this.events);\n  }\n\n  seekVideo(value: number): void {\n    const percentage = value / 100;\n    const newTime = this.video.duration * percentage;\n    this.video.currentTime = newTime;\n  }\n\n  updateCurrentTime(time: number): void {\n    this.currentTime = time;\n    this.curTimePercent = this.updateTime(this.currentTimeChanged, this.currentTime);\n  }\n\n  updateBufferedTime(): void {\n    if (this.video.buffered.length > 0) {\n      let largestBufferValue = 0;\n      for (let i = 0; i < this.video.buffered.length; i++) {\n        const cur = this.video.currentTime;\n        const start = this.video.buffered.start(i);\n        const end = this.video.buffered.end(i);\n        if (start <= cur && end > cur && (end - start) > largestBufferValue)\n          largestBufferValue = end;\n      }\n      this.bufferedTime = largestBufferValue;\n      this.bufTimePercent = this.updateTime(this.bufferedTimeChanged, this.bufferedTime);\n    }\n  }\n\n  updateTime(emitter: EventEmitter<number>, time: number): number {\n    emitter.emit(time);\n    return time / this.video.duration * 100;\n  }\n\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'mat-time-control',\n  templateUrl: './mat-time-control.component.html',\n  styleUrls: ['./mat-time-control.component.css']\n})\nexport class MatTimeControlComponent {\n  @Input() video: HTMLVideoElement;\n\n  constructor() { }\n\n}\n","import { AfterViewInit, Component, Input, OnDestroy, Renderer2 } from '@angular/core';\n\nimport { EventHandler } from '../../interfaces/event-handler.interface';\nimport { EventService } from '../../services/event.service';\n\n@Component({\n  selector: 'mat-video-spinner',\n  templateUrl: './mat-video-spinner.component.html',\n  styleUrls: [\n    './mat-video-spinner.component.scss',\n    './indicators/spin.css',\n    './indicators/dot.css',\n    './indicators/split-ring.css',\n    './indicators/hourglass.css'\n  ]\n})\nexport class MatVideoSpinnerComponent implements AfterViewInit, OnDestroy {\n  @Input() video: HTMLVideoElement;\n  @Input() spinner: string = 'spin';\n\n  videoBuffering = false;\n  videoLoaded = false;\n\n  private events: EventHandler[] = [];\n\n  constructor(\n    private renderer: Renderer2,\n    private evt: EventService\n  ) { }\n\n  ngAfterViewInit(): void {\n    this.events = [\n      { element: this.video, name: 'loadstart', callback: event => this.videoLoaded = false, dispose: null },\n      { element: this.video, name: 'loadedmetadata', callback: event => this.videoLoaded = true, dispose: null },\n      { element: this.video, name: 'canplay', callback: event => this.videoBuffering = false, dispose: null },\n      { element: this.video, name: 'waiting', callback: event => this.videoBuffering = true, dispose: null },\n      { element: this.video, name: 'durationchange', callback: event => this.videoBuffering = true, dispose: null }\n    ];\n\n    this.video.onloadeddata = () => this.videoLoaded = true;\n\n    this.evt.addEvents(this.renderer, this.events);\n  }\n\n  ngOnDestroy(): void {\n    this.video.onloadeddata = null;\n\n    this.evt.removeEvents(this.events);\n  }\n\n}\n","import { Component, EventEmitter, HostListener, Input, Output } from '@angular/core';\nimport { ThemePalette } from '@angular/material/core';\n\nimport { EventService } from '../../services/event.service';\n\n@Component({\n  selector: 'mat-volume-control',\n  templateUrl: './mat-volume-control.component.html',\n  styleUrls: ['./mat-volume-control.component.css']\n})\nexport class MatVolumeControlComponent {\n  @Input() video: HTMLVideoElement = null;\n\n  @Input() color: ThemePalette = 'primary';\n\n  @Input() volume: number = 1;\n\n  @Output() volumeChanged = new EventEmitter<number>();\n\n  private _muted: boolean = false;\n  @Input()\n  get muted() { return this._muted; }\n  set muted(v: boolean) {\n    this._muted = v;\n    this.video.muted = this._muted;\n  }\n\n  @Output() mutedChanged = new EventEmitter<boolean>();\n\n  @Input() keyboard: boolean = true;\n\n  constructor(private evt: EventService) { }\n\n  setVolume(value: number): void {\n    this.volume = value;\n    this.video.volume = this.volume;\n    this.volumeChanged.emit(this.volume);\n\n    if (this.volume > 0)\n      this.setMuted(false);\n  }\n\n  setMuted(value: boolean): void {\n    if (this.muted !== value)\n      this.toggleMuted();\n  }\n\n  toggleMuted(): void {\n    this.muted = !this.muted;\n    this.updateMuted();\n  }\n\n  updateMuted(): void {\n    this.video.muted = this.muted;\n    this.mutedChanged.emit(this.muted);\n  }\n\n  @HostListener('document:keyup.m', ['$event'])\n  onMuteKey(event: KeyboardEvent) {\n    if (this.keyboard) {\n      this.toggleMuted();\n      event.preventDefault();\n    }\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSliderModule } from '@angular/material/slider';\n\nimport { MatVideoSourceDirective } from './directives/mat-video-source.directive';\nimport { MatVideoTrackDirective } from './directives/mat-video-track.directive';\nimport { MatSliderProgressBarComponent } from './internal/mat-slider-progress-bar/mat-slider-progress-bar.component';\nimport { SecondsToTimePipe } from './pipes/seconds-to-time.pipe';\nimport { EventService } from './services/event.service';\nimport { FullscreenService } from './services/fullscreen.service';\nimport { MatDownloadButtonComponent } from './ui/mat-download-button/mat-download-button.component';\nimport { MatFrameByFrameControlComponent } from './ui/mat-frame-by-frame-control/mat-frame-by-frame-control.component';\nimport { MatFullscreenButtonComponent } from './ui/mat-fullscreen-button/mat-fullscreen-button.component';\nimport { MatPlayButtonComponent } from './ui/mat-play-button/mat-play-button.component';\nimport { MatQualityControlComponent } from './ui/mat-quality-control/mat-quality-control.component';\nimport { MatSeekProgressControlComponent } from './ui/mat-seek-progress-control/mat-seek-progress-control.component';\nimport { MatTimeControlComponent } from './ui/mat-time-control/mat-time-control.component';\nimport { MatVideoSpinnerComponent } from './ui/mat-video-spinner/mat-video-spinner.component';\nimport { MatVolumeControlComponent } from './ui/mat-volume-control/mat-volume-control.component';\nimport { MatVideoComponent } from './video.component';\n\n@NgModule({\n    declarations: [\n        SecondsToTimePipe,\n        MatVideoComponent,\n        MatSliderProgressBarComponent,\n        MatPlayButtonComponent,\n        MatVolumeControlComponent,\n        MatDownloadButtonComponent,\n        MatFullscreenButtonComponent,\n        MatTimeControlComponent,\n        MatQualityControlComponent,\n        MatVideoSpinnerComponent,\n        MatSeekProgressControlComponent,\n        MatVideoSourceDirective,\n        MatVideoTrackDirective,\n        MatFrameByFrameControlComponent\n    ],\n    imports: [\n        CommonModule,\n        MatIconModule,\n        MatButtonModule,\n        MatSliderModule,\n    ],\n    exports: [\n        MatVideoComponent,\n        MatVideoSourceDirective,\n        MatVideoTrackDirective\n    ],\n    providers: [\n        FullscreenService,\n        EventService\n    ]\n})\nexport class MatVideoModule { }\n"]}