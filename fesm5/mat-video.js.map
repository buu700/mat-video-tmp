{"version":3,"file":"mat-video.js","sources":["ng://mat-video/app/video/services/event.service.ts","ng://mat-video/app/video/video.component.ts","ng://mat-video/app/video/directives/mat-video-source.directive.ts","ng://mat-video/app/video/directives/mat-video-track.directive.ts","ng://mat-video/app/video/internal/mat-slider-progress-bar/mat-slider-progress-bar.component.ts","ng://mat-video/app/video/pipes/seconds-to-time.pipe.ts","ng://mat-video/app/video/services/fullscreen.service.ts","ng://mat-video/app/video/ui/mat-download-button/mat-download-button.component.ts","ng://mat-video/app/video/ui/mat-frame-by-frame-control/mat-frame-by-frame-control.component.ts","ng://mat-video/app/video/ui/mat-fullscreen-button/mat-fullscreen-button.component.ts","ng://mat-video/app/video/ui/mat-play-button/mat-play-button.component.ts","ng://mat-video/app/video/ui/mat-quality-control/mat-quality-control.component.ts","ng://mat-video/app/video/ui/mat-seek-progress-control/mat-seek-progress-control.component.ts","ng://mat-video/app/video/ui/mat-time-control/mat-time-control.component.ts","ng://mat-video/app/video/ui/mat-video-spinner/mat-video-spinner.component.ts","ng://mat-video/app/video/ui/mat-volume-control/mat-volume-control.component.ts","ng://mat-video/app/video/video.module.ts","ng://mat-video/mat-video.ts"],"sourcesContent":["import { Injectable, Renderer2 } from '@angular/core';\nimport { EventHandler } from '../interfaces/event-handler.interface';\n\n@Injectable()\nexport class EventService {\n\n    constructor() { }\n\n    addEvents(renderer: Renderer2, events: EventHandler[]): void {\n        for (const event of events)\n            event.dispose = renderer.listen(event.element, event.name, newEvent => event.callback(newEvent));\n    }\n\n    removeEvents(events: EventHandler[]): void {\n        for (const event of events)\n            if (event.dispose)\n                event.dispose();\n    }\n\n}\n","import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnDestroy,\n    Output,\n    Renderer2,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { ThemePalette } from '@angular/material/core';\n\nimport { EventHandler } from './interfaces/event-handler.interface';\nimport { EventService } from './services/event.service';\n\n@Component({\n    selector: 'mat-video',\n    templateUrl: './video.component.html',\n    styleUrls: ['./video.component.css', './styles/icons.css']\n})\nexport class MatVideoComponent implements AfterViewInit, OnChanges, OnDestroy {\n    @ViewChild('player') private player: ElementRef;\n    @ViewChild('video') private video: ElementRef;\n\n    @Input() src: string|MediaStream|MediaSource|Blob = null;\n    @Input() title: string = null;\n    @Input() autoplay: boolean = false;\n    @Input() preload: boolean = true;\n    @Input() loop: boolean = false;\n    @Input() quality: boolean = true;\n    @Input() fullscreen: boolean = true;\n    @Input() playsinline: boolean = false;\n    @Input() showFrameByFrame: boolean = false;\n    @Input() fps: number = 29.97;\n    @Input() download: boolean = false;\n    @Input() color: ThemePalette = 'primary';\n    @Input() spinner: string = 'spin';\n    @Input() poster: string = null;\n    @Input() keyboard: boolean = true;\n    @Input() overlay: boolean = null;\n    @Input() muted: boolean = false;\n    @Output() mutedChange = new EventEmitter<boolean>();\n\n\n    @Input()\n    get time() {\n        return this.getVideoTag().currentTime;\n    }\n\n    @Output() timeChange = new EventEmitter<number>();\n    set time(val: number) {\n        const video: HTMLVideoElement = this.getVideoTag();\n        if (video && val) {\n            if (val > video.duration) {\n                val = video.duration;\n            }\n            if (val < 0) {\n                val = 0;\n            }\n            if (val !== video.currentTime) {\n                video.currentTime = val;\n            }\n            if (this.lastTime !== video.currentTime) {\n                setTimeout(() => this.timeChange.emit(video.currentTime), 0);\n                this.lastTime = video.currentTime;\n            }\n        }\n    }\n\n    playing: boolean = false;\n\n    isFullscreen: boolean = false;\n\n    videoWidth: number;\n    videoHeight: number;\n    lastTime: number;\n\n    videoLoaded = false;\n\n    private isMouseMoving: boolean = false;\n    private isMouseMovingTimer: NodeJS.Timer;\n    private isMouseMovingTimeout: number = 2000;\n\n    private events: EventHandler[];\n\n    private srcObjectURL: string;\n\n    constructor(\n        private renderer: Renderer2,\n        private evt: EventService\n    ) { }\n\n    ngAfterViewInit(): void {\n        this.events = [\n            { element: this.video.nativeElement, name: 'loadstart', callback: event => this.videoLoaded = false, dispose: null },\n            { element: this.video.nativeElement, name: 'loadedmetadata', callback: event => this.evLoadedMetadata(event), dispose: null },\n            { element: this.video.nativeElement, name: 'error', callback: event => console.error('Unhandled Video Error', event), dispose: null },\n            { element: this.video.nativeElement, name: 'contextmenu', callback: event => event.preventDefault(), dispose: null },\n            { element: this.video.nativeElement, name: 'timeupdate', callback: event => this.evTimeUpdate(event), dispose: null },\n            { element: this.player.nativeElement, name: 'mousemove', callback: event => this.evMouseMove(event), dispose: null }\n        ];\n\n        this.video.nativeElement.onloadeddata = () => this.videoLoaded = true;\n\n        this.evt.addEvents(this.renderer, this.events);\n        this.setVideoSrc(this.src);\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes.src) {\n            this.setVideoSrc(this.src);\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.video.nativeElement.onloadeddata = null;\n\n        this.evt.removeEvents(this.events);\n        this.setVideoSrc(null);\n    }\n\n    load(): void {\n        if (this.video && this.video.nativeElement)\n            this.video.nativeElement.load();\n    }\n\n    getVideoTag(): HTMLVideoElement | null {\n        return this.video && this.video.nativeElement ? this.video.nativeElement as HTMLVideoElement : null;\n    }\n\n    evLoadedMetadata(event: any): void {\n        this.videoWidth = this.video.nativeElement.videoWidth;\n        this.videoHeight = this.video.nativeElement.videoHeight;\n        this.videoLoaded = true;\n    }\n\n    evMouseMove(event: any): void {\n        this.isMouseMoving = true;\n        clearTimeout(this.isMouseMovingTimer);\n        this.isMouseMovingTimer = setTimeout(() => {\n            this.isMouseMoving = false;\n        }, this.isMouseMovingTimeout);\n    }\n\n    evTimeUpdate(event: any): void {\n        this.time = this.getVideoTag().currentTime;\n    }\n\n    getOverlayClass(activeClass: string, inactiveClass: string): any {\n        if (this.overlay === null) {\n            return (!this.playing || this.isMouseMoving) ? activeClass : inactiveClass;\n        } else {\n            return this.overlay ? activeClass : inactiveClass;\n        }\n    }\n\n    private setVideoSrc(src: string|MediaStream|MediaSource|Blob): void {\n        if (this.srcObjectURL) {\n            URL.revokeObjectURL(this.srcObjectURL);\n            this.srcObjectURL = null;\n        }\n\n        if (!this.video || !this.video.nativeElement) {\n            return;\n        }\n\n        if (!src) {\n            this.video.nativeElement.src = null;\n            if ('srcObject' in HTMLVideoElement.prototype) {\n                this.video.nativeElement.srcObject = new MediaStream();\n            }\n        } else if (typeof src === 'string') {\n            this.video.nativeElement.src = src;\n        } else if ('srcObject' in HTMLVideoElement.prototype) {\n            this.video.nativeElement.srcObject = src;\n        } else {\n            this.srcObjectURL = URL.createObjectURL(src);\n            this.video.nativeElement.src = this.srcObjectURL;\n        }\n    }\n\n}\n","import { Directive, ElementRef, Host, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { MatVideoComponent } from '../video.component';\n\n@Directive({\n  selector: '[matVideoSource]'\n})\nexport class MatVideoSourceDirective implements OnChanges {\n  @Input() src: string = null;\n  @Input() type: string = null;\n\n  private init = true;\n  private video: MatVideoComponent;\n  private source: HTMLSourceElement;\n\n  constructor(\n    @Host() private matVideoComponent: MatVideoComponent,\n    private el: ElementRef\n  ) {\n    this.video = matVideoComponent;\n    this.source = el.nativeElement;\n    this.init = false;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.source.src = this.src;\n    this.source.type = this.type;\n\n    if (!this.init)\n      this.video.load();\n  }\n\n}\n","import { Directive, ElementRef, Host, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { MatVideoComponent } from '../video.component';\n\n@Directive({\n    selector: '[matVideoTrack]'\n})\nexport class MatVideoTrackDirective implements OnChanges {\n    @Input() src: string = null;\n    @Input() kind: string = null;\n    @Input() srclang: string = null;\n    @Input() label: string = null;\n\n    private init = true;\n    private video: MatVideoComponent;\n    private track: HTMLTrackElement;\n\n    constructor(\n        @Host() private matVideoComponent: MatVideoComponent,\n        private el: ElementRef\n    ) {\n        this.video = matVideoComponent;\n        this.track = el.nativeElement;\n        this.init = false;\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        this.track.src = this.src;\n        this.track.kind = this.kind;\n        this.track.srclang = this.srclang;\n        this.track.label = this.label;\n\n        if (!this.init)\n            this.video.load();\n    }\n\n}\n","import { Component, Input, Output, EventEmitter, ElementRef, ChangeDetectorRef, ViewEncapsulation, ChangeDetectionStrategy, Optional, Attribute } from '@angular/core';\nimport { MatSlider, MAT_SLIDER_VALUE_ACCESSOR } from '@angular/material/slider';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\n\n/** Counter used to generate unique IDs for progress bars. */\nlet sliderprogressbarId = 0;\n\n@Component({\n    selector: 'mat-slider-progress-bar',\n    templateUrl: './mat-slider-progress-bar.component.html',\n    styleUrls: ['./mat-slider-progress-bar.component.css'],\n    providers: [MAT_SLIDER_VALUE_ACCESSOR],\n    host: {\n        '(focus)': '_onFocus()',\n        '(blur)': '_onBlur()',\n        '(click)': 'this[\"_onClick\"] ? this[\"_onClick\"]($event) : null', // Angular 5/6 support\n        '(mousedown)': 'this[\"_onMousedown\"] ? this[\"_onMousedown\"]($event) : null', // Angular 7 support\n        '(keydown)': '_onKeydown($event)',\n        '(keyup)': '_onKeyup()',\n        '(mouseenter)': '_onMouseenter()',\n        'class': 'mat-slider',\n        'role': 'slider',\n        '[tabIndex]': 'tabIndex',\n        '[attr.aria-disabled]': 'disabled',\n        '[attr.aria-valuemax]': 'max',\n        '[attr.aria-valuemin]': 'min',\n        '[attr.aria-valuenow]': 'value',\n        '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n        '[class.mat-slider-disabled]': 'disabled',\n        '[class.mat-slider-has-ticks]': 'tickInterval',\n        '[class.mat-slider-horizontal]': '!vertical',\n        '[class.mat-slider-axis-inverted]': '_invertAxis',\n        '[class.mat-slider-sliding]': '_isSliding',\n        '[class.mat-slider-thumb-label-showing]': 'thumbLabel',\n        '[class.mat-slider-vertical]': 'vertical',\n        '[class.mat-slider-min-value]': '_isMinValue',\n        '[class.mat-slider-hide-last-tick]': 'disabled || _isMinValue && _thumbGap && _invertAxis',\n    },\n    inputs: ['disabled', 'color', 'tabIndex'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\n\nexport class MatSliderProgressBarComponent extends MatSlider {\n    @Input() mode: string = 'buffer';\n    @Input() value: number = 0;\n    /** Buffer value of the progress bar. Defaults to zero. */\n    @Input()\n    get bufferValue(): number { return this._bufferValue; }\n    set bufferValue(v: number) { this._bufferValue = clamp(v || 0); }\n    private _bufferValue: number = 0;\n\n    /** The id of the progress bar. */\n    sliderprogressbarId = `mat-slider-progress-bar-${sliderprogressbarId++}`;\n\n    constructor(\n        elementRef: ElementRef,\n        focusMonitor: FocusMonitor,\n        changeDetectorRef: ChangeDetectorRef,\n        @Optional() dir: Directionality,\n        @Attribute('tabindex') tabIndex: string\n    ) {\n        super(elementRef, focusMonitor, changeDetectorRef, dir, tabIndex);\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n\n    /** CSS styles for the track fill element. */\n    get _trackBufferStyles(): { [key: string]: string } {\n        if (this.mode === 'buffer') {\n            const axis = this.vertical ? 'Y' : 'X';\n            return {\n                'transform': `translate${axis}(0px) scale${axis}(${this._bufferValue / 100})`\n            };\n        }\n    }\n}\n\n/** Clamps a value to be between two numbers, by default 0 and 100. */\nfunction clamp(v: number, min = 0, max = 100) {\n    return Math.max(min, Math.min(max, v));\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'secondsToTime'\n})\nexport class SecondsToTimePipe implements PipeTransform {\n    times = {\n        year: 31557600,\n        month: 2629746,\n        day: 86400,\n        hour: 3600,\n    };\n\n    transform(seconds: number) {\n        if (!seconds)\n            return '0:00';\n        else {\n            let time_string: string = '';\n            for (const key in this.times) {\n                if (Math.floor(seconds / this.times[key]) > 0) {\n                    time_string += Math.floor(seconds / this.times[key]).toString() + ':';\n                    seconds = seconds - this.times[key] * Math.floor(seconds / this.times[key]);\n                }\n            }\n            time_string += Math.floor(seconds / 60).toString() + ':';\n            seconds = seconds - 60 * Math.floor(seconds / 60);\n            if (Math.floor(seconds) < 10) time_string += '0';\n            time_string += Math.floor(seconds).toString();\n            return time_string;\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { FullscreenControls } from '../interfaces/fullscreen-controls.interface';\n\n@Injectable()\nexport class FullscreenService {\n\n    private fnMap: string[][] = [\n        // Object keys\n        [\n            'requestFullscreen',\n            'exitFullscreen',\n            'fullscreenElement',\n            'fullscreenEnabled',\n            'fullscreenchange',\n            'fullscreenerror'\n        ],\n        // New WebKit\n        [\n            'webkitRequestFullscreen',\n            'webkitExitFullscreen',\n            'webkitFullscreenElement',\n            'webkitFullscreenEnabled',\n            'webkitfullscreenchange',\n            'webkitfullscreenerror'\n\n        ],\n        // Old WebKit (Safari 5.1)\n        [\n            'webkitRequestFullScreen',\n            'webkitCancelFullScreen',\n            'webkitCurrentFullScreenElement',\n            'webkitCancelFullScreen',\n            'webkitfullscreenchange',\n            'webkitfullscreenerror'\n\n        ],\n        // Mozilla\n        [\n            'mozRequestFullScreen',\n            'mozCancelFullScreen',\n            'mozFullScreenElement',\n            'mozFullScreenEnabled',\n            'mozfullscreenchange',\n            'mozfullscreenerror'\n        ],\n        // MS\n        [\n            'msRequestFullscreen',\n            'msExitFullscreen',\n            'msFullscreenElement',\n            'msFullscreenEnabled',\n            'MSFullscreenChange',\n            'MSFullscreenError'\n        ]\n    ];\n\n    private fn: FullscreenControls;\n    private keyboardAllowed: boolean;\n\n    constructor() {\n        this.keyboardAllowed = typeof Element !== 'undefined' && 'ALLOW_KEYBOARD_INPUT' in Element;\n        const ret: any = {};\n        let val;\n\n        for (let i = 0; i < this.fnMap.length; i++) {\n            val = this.fnMap[i];\n            if (val && val[1] in document) {\n                for (i = 0; i < val.length; i++) {\n                    // Map everything to the first list of keys\n                    ret[this.fnMap[0][i].toString()] = val[i];\n                }\n                this.fn = ret;\n            }\n        }\n    }\n\n    public request(elem: any) {\n        const request = this.fn.requestFullscreen;\n\n        elem = elem || document.documentElement;\n\n        // Work around Safari 5.1 bug: reports support for\n        // keyboard in fullscreen even though it doesn't.\n        // Browser sniffing, since the alternative with\n        // setTimeout is even worse.\n        if (/5\\.1[.\\d]* Safari/.test(navigator.userAgent)) {\n            elem[request]();\n        } else {\n            elem[request](this.keyboardAllowed ? (Element as any).ALLOW_KEYBOARD_INPUT : {});\n        }\n    }\n\n    public exit() {\n        document[this.fn.exitFullscreen]();\n    }\n\n    public toggle(elem: any) {\n        if (this.isFullscreen()) {\n            this.exit();\n        } else {\n            this.request(elem);\n        }\n    }\n\n    public onChange(callback: any) {\n        document.addEventListener(this.fn.fullscreenchange, callback, false);\n    }\n\n    public onError(callback: any) {\n        document.addEventListener(this.fn.fullscreenerror, callback, false);\n    }\n\n    public isFullscreen() {\n        return Boolean(document[this.fn.fullscreenElement]);\n    }\n\n    public isEnabled() {\n        // Coerce to boolean in case of old WebKit\n        return Boolean(document[this.fn.fullscreenEnabled]);\n    }\n\n    public getElement() {\n        return document[this.fn.fullscreenElement];\n    }\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'mat-download-button',\n  templateUrl: './mat-download-button.component.html',\n  styleUrls: ['./mat-download-button.component.css']\n})\nexport class MatDownloadButtonComponent {\n  @Input() video: HTMLVideoElement;\n  @Input() title: string;\n\n  constructor() { }\n\n}\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'mat-frame-by-frame-control',\n    templateUrl: './mat-frame-by-frame-control.component.html',\n    styleUrls: ['./mat-frame-by-frame-control.component.css']\n})\nexport class MatFrameByFrameControlComponent implements OnInit {\n    @Input() video: HTMLVideoElement;\n    @Input() fps: number = 29.97;\n\n    constructor() { }\n\n    ngOnInit() {\n    }\n\n    seekFrames(nbFrames: number) {\n        if (!this.video.paused) {\n            this.video.pause();\n        }\n\n        const currentFrames = this.video.currentTime * this.fps;\n        const newPos = ((currentFrames + nbFrames) / this.fps) + 0.00001;\n        this.video.currentTime = newPos;\n    }\n\n}\n","import { Component, EventEmitter, HostListener, Input, OnInit, Output } from '@angular/core';\n\nimport { EventService } from '../../services/event.service';\nimport { FullscreenService } from '../../services/fullscreen.service';\n\n@Component({\n  selector: 'mat-fullscreen-button',\n  templateUrl: './mat-fullscreen-button.component.html',\n  styleUrls: ['./mat-fullscreen-button.component.css']\n})\nexport class MatFullscreenButtonComponent implements OnInit {\n  canFullscreen: boolean = false;\n\n  @Input() player: HTMLVideoElement;\n\n  @Input() fullscreen: boolean = false;\n\n  @Output() fullscreenChanged = new EventEmitter<boolean>();\n\n  @Input() keyboard: boolean = true;\n\n  constructor(\n    private fscreen: FullscreenService,\n    private evt: EventService\n  ) { }\n\n  ngOnInit(): void {\n    if (this.fscreen.isEnabled())\n      this.canFullscreen = true;\n\n    this.fscreen.onChange(event => this.fscreen.isFullscreen() ? this.onChangesFullscreen(true) : this.onChangesFullscreen(false));\n  }\n\n  setFullscreen(value: boolean) {\n    if (this.canFullscreen && this.fullscreen !== value)\n      this.toggleFullscreen();\n  }\n\n  toggleFullscreen(): void {\n    this.fullscreen = !this.fullscreen;\n    this.updateFullscreen();\n  }\n\n  updateFullscreen(): void {\n    this.fullscreen ? this.fscreen.request(this.player) : this.fscreen.exit();\n    this.fullscreenChanged.emit(this.fullscreen);\n  }\n\n  onChangesFullscreen(value: boolean): void {\n    this.fullscreen = value;\n    this.fullscreenChanged.emit(this.fullscreen);\n  }\n\n  @HostListener('document:keyup.f', ['$event'])\n  onFullscreenKey(event: KeyboardEvent) {\n    if (this.keyboard) {\n      this.toggleFullscreen();\n      event.preventDefault();\n    }\n  }\n\n}\n","import { AfterViewInit, Component, EventEmitter, HostListener, Input, OnDestroy, Output, Renderer2 } from '@angular/core';\n\nimport { EventHandler } from '../../interfaces/event-handler.interface';\nimport { EventService } from '../../services/event.service';\n\n@Component({\n  selector: 'mat-play-button',\n  templateUrl: './mat-play-button.component.html',\n  styleUrls: ['./mat-play-button.component.css']\n})\nexport class MatPlayButtonComponent implements AfterViewInit, OnDestroy {\n  @Input() video: HTMLVideoElement;\n\n  @Input() play: boolean = false;\n\n  @Output() playChanged = new EventEmitter<boolean>();\n\n  @Input() keyboard: boolean = true;\n\n  private events: EventHandler[];\n\n  constructor(\n    private renderer: Renderer2,\n    private evt: EventService\n  ) { }\n\n  ngAfterViewInit(): void {\n    this.events = [\n      { element: this.video, name: 'play', callback: event => this.setVideoPlayback(true), dispose: null },\n      { element: this.video, name: 'pause', callback: event => this.setVideoPlayback(false), dispose: null },\n      { element: this.video, name: 'durationchange', callback: event => this.setVideoPlayback(false), dispose: null },\n      { element: this.video, name: 'ended', callback: event => this.setVideoPlayback(false), dispose: null },\n      { element: this.video, name: 'click', callback: event => this.toggleVideoPlayback(), dispose: null }\n    ];\n\n    this.evt.addEvents(this.renderer, this.events);\n  }\n\n  ngOnDestroy(): void {\n    this.evt.removeEvents(this.events);\n  }\n\n  setVideoPlayback(value: boolean) {\n    if (this.play !== value)\n      this.toggleVideoPlayback();\n  }\n\n  toggleVideoPlayback(): void {\n    this.play = !this.play;\n    this.updateVideoPlayback();\n  }\n\n  updateVideoPlayback(): void {\n    this.play ? this.video.play() : this.video.pause();\n    this.playChanged.emit(this.play);\n  }\n\n  @HostListener('document:keyup.space', ['$event'])\n  onPlayKey(event: KeyboardEvent) {\n    if (this.keyboard) {\n      this.toggleVideoPlayback();\n      event.preventDefault();\n    }\n  }\n\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'mat-quality-control',\n  templateUrl: './mat-quality-control.component.html',\n  styleUrls: ['./mat-quality-control.component.css']\n})\nexport class MatQualityControlComponent {\n  @Input() video: HTMLVideoElement;\n\n  constructor() { }\n\n}\n","import { AfterViewInit, Component, EventEmitter, Input, OnDestroy, Output, Renderer2 } from '@angular/core';\nimport { ThemePalette } from '@angular/material/core';\n\nimport { EventHandler } from '../../interfaces/event-handler.interface';\nimport { EventService } from '../../services/event.service';\n\n@Component({\n  selector: 'mat-seek-progress-control',\n  templateUrl: './mat-seek-progress-control.component.html',\n  styleUrls: ['./mat-seek-progress-control.component.css']\n})\nexport class MatSeekProgressControlComponent implements AfterViewInit, OnDestroy {\n  curTimePercent: number = 0;\n  bufTimePercent: number = 0;\n\n  @Input() video: HTMLVideoElement = null;\n\n  @Input() color: ThemePalette = 'primary';\n\n  @Input() currentTime: number = 0;\n\n  @Output() currentTimeChanged = new EventEmitter<number>();\n\n  @Input() bufferedTime: number = 0;\n\n  @Output() bufferedTimeChanged = new EventEmitter<number>();\n\n  private events: EventHandler[];\n\n  constructor(\n    private renderer: Renderer2,\n    private evt: EventService\n  ) { }\n\n  ngAfterViewInit(): void {\n    this.events = [\n      { element: this.video, name: 'seeking', callback: event => this.updateCurrentTime(this.video.currentTime), dispose: null },\n      { element: this.video, name: 'canplaythrough', callback: event => this.updateBufferedTime(), dispose: null },\n      { element: this.video, name: 'timeupdate', callback: event => this.updateCurrentTime(this.video.currentTime), dispose: null },\n      { element: this.video, name: 'progress', callback: event => this.updateBufferedTime(), dispose: null }\n    ];\n\n    this.evt.addEvents(this.renderer, this.events);\n  }\n\n  ngOnDestroy(): void {\n    this.evt.removeEvents(this.events);\n  }\n\n  seekVideo(value: number): void {\n    const percentage = value / 100;\n    const newTime = this.video.duration * percentage;\n    this.video.currentTime = newTime;\n  }\n\n  updateCurrentTime(time: number): void {\n    this.currentTime = time;\n    this.curTimePercent = this.updateTime(this.currentTimeChanged, this.currentTime);\n  }\n\n  updateBufferedTime(): void {\n    if (this.video.buffered.length > 0) {\n      let largestBufferValue = 0;\n      for (let i = 0; i < this.video.buffered.length; i++) {\n        const cur = this.video.currentTime;\n        const start = this.video.buffered.start(i);\n        const end = this.video.buffered.end(i);\n        if (start <= cur && end > cur && (end - start) > largestBufferValue)\n          largestBufferValue = end;\n      }\n      this.bufferedTime = largestBufferValue;\n      this.bufTimePercent = this.updateTime(this.bufferedTimeChanged, this.bufferedTime);\n    }\n  }\n\n  updateTime(emitter: EventEmitter<number>, time: number): number {\n    emitter.emit(time);\n    return time / this.video.duration * 100;\n  }\n\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'mat-time-control',\n  templateUrl: './mat-time-control.component.html',\n  styleUrls: ['./mat-time-control.component.css']\n})\nexport class MatTimeControlComponent {\n  @Input() video: HTMLVideoElement;\n\n  constructor() { }\n\n}\n","import { AfterViewInit, Component, Input, OnDestroy, Renderer2 } from '@angular/core';\n\nimport { EventHandler } from '../../interfaces/event-handler.interface';\nimport { EventService } from '../../services/event.service';\n\n@Component({\n  selector: 'mat-video-spinner',\n  templateUrl: './mat-video-spinner.component.html',\n  styleUrls: [\n    './mat-video-spinner.component.scss',\n    './indicators/spin.css',\n    './indicators/dot.css',\n    './indicators/split-ring.css',\n    './indicators/hourglass.css'\n  ]\n})\nexport class MatVideoSpinnerComponent implements AfterViewInit, OnDestroy {\n  @Input() video: HTMLVideoElement;\n  @Input() spinner: string = 'spin';\n\n  videoBuffering = false;\n  videoLoaded = false;\n\n  private events: EventHandler[] = [];\n\n  constructor(\n    private renderer: Renderer2,\n    private evt: EventService\n  ) { }\n\n  ngAfterViewInit(): void {\n    this.events = [\n      { element: this.video, name: 'loadstart', callback: event => this.videoLoaded = false, dispose: null },\n      { element: this.video, name: 'loadedmetadata', callback: event => this.videoLoaded = true, dispose: null },\n      { element: this.video, name: 'canplay', callback: event => this.videoBuffering = false, dispose: null },\n      { element: this.video, name: 'waiting', callback: event => this.videoBuffering = true, dispose: null },\n      { element: this.video, name: 'durationchange', callback: event => this.videoBuffering = true, dispose: null }\n    ];\n\n    this.video.onloadeddata = () => this.videoLoaded = true;\n\n    this.evt.addEvents(this.renderer, this.events);\n  }\n\n  ngOnDestroy(): void {\n    this.video.onloadeddata = null;\n\n    this.evt.removeEvents(this.events);\n  }\n\n}\n","import {\n  AfterViewInit,\n  Component,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges\n} from '@angular/core';\nimport { ThemePalette } from '@angular/material/core';\n\nimport { EventService } from '../../services/event.service';\n\n@Component({\n  selector: 'mat-volume-control',\n  templateUrl: './mat-volume-control.component.html',\n  styleUrls: ['./mat-volume-control.component.css']\n})\nexport class MatVolumeControlComponent implements AfterViewInit, OnChanges {\n  @Input() video: HTMLVideoElement = null;\n\n  @Input() color: ThemePalette = 'primary';\n\n  @Input() volume: number = 1;\n\n  @Output() volumeChanged = new EventEmitter<number>();\n\n  @Input() muted: boolean = false;\n\n  @Output() mutedChanged = new EventEmitter<boolean>();\n\n  @Input() keyboard: boolean = true;\n\n  constructor(private evt: EventService) { }\n\n  ngAfterViewInit(): void {\n    this.updateMuted(false);\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.muted) {\n      this.updateMuted(false);\n    }\n  }\n\n  setVolume(value: number): void {\n    this.volume = value;\n    this.video.volume = this.volume;\n    this.volumeChanged.emit(this.volume);\n\n    if (this.volume > 0)\n      this.setMuted(false);\n  }\n\n  setMuted(value: boolean): void {\n    if (this.muted !== value)\n      this.toggleMuted();\n  }\n\n  toggleMuted(): void {\n    this.muted = !this.muted;\n    this.updateMuted();\n  }\n\n  updateMuted(emitChange: boolean = true): void {\n    if (this.video) {\n      this.video.muted = this.muted;\n    }\n\n    if (emitChange) {\n      this.mutedChanged.emit(this.muted);\n    }\n  }\n\n  @HostListener('document:keyup.m', ['$event'])\n  onMuteKey(event: KeyboardEvent) {\n    if (this.keyboard) {\n      this.toggleMuted();\n      event.preventDefault();\n    }\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSliderModule } from '@angular/material/slider';\n\nimport { MatVideoSourceDirective } from './directives/mat-video-source.directive';\nimport { MatVideoTrackDirective } from './directives/mat-video-track.directive';\nimport { MatSliderProgressBarComponent } from './internal/mat-slider-progress-bar/mat-slider-progress-bar.component';\nimport { SecondsToTimePipe } from './pipes/seconds-to-time.pipe';\nimport { EventService } from './services/event.service';\nimport { FullscreenService } from './services/fullscreen.service';\nimport { MatDownloadButtonComponent } from './ui/mat-download-button/mat-download-button.component';\nimport { MatFrameByFrameControlComponent } from './ui/mat-frame-by-frame-control/mat-frame-by-frame-control.component';\nimport { MatFullscreenButtonComponent } from './ui/mat-fullscreen-button/mat-fullscreen-button.component';\nimport { MatPlayButtonComponent } from './ui/mat-play-button/mat-play-button.component';\nimport { MatQualityControlComponent } from './ui/mat-quality-control/mat-quality-control.component';\nimport { MatSeekProgressControlComponent } from './ui/mat-seek-progress-control/mat-seek-progress-control.component';\nimport { MatTimeControlComponent } from './ui/mat-time-control/mat-time-control.component';\nimport { MatVideoSpinnerComponent } from './ui/mat-video-spinner/mat-video-spinner.component';\nimport { MatVolumeControlComponent } from './ui/mat-volume-control/mat-volume-control.component';\nimport { MatVideoComponent } from './video.component';\n\n@NgModule({\n    declarations: [\n        SecondsToTimePipe,\n        MatVideoComponent,\n        MatSliderProgressBarComponent,\n        MatPlayButtonComponent,\n        MatVolumeControlComponent,\n        MatDownloadButtonComponent,\n        MatFullscreenButtonComponent,\n        MatTimeControlComponent,\n        MatQualityControlComponent,\n        MatVideoSpinnerComponent,\n        MatSeekProgressControlComponent,\n        MatVideoSourceDirective,\n        MatVideoTrackDirective,\n        MatFrameByFrameControlComponent\n    ],\n    imports: [\n        CommonModule,\n        MatIconModule,\n        MatButtonModule,\n        MatSliderModule,\n    ],\n    exports: [\n        MatVideoComponent,\n        MatVideoSourceDirective,\n        MatVideoTrackDirective\n    ],\n    providers: [\n        FullscreenService,\n        EventService\n    ]\n})\nexport class MatVideoModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {MatVideoSourceDirective as ɵn} from './app/video/directives/mat-video-source.directive';\nexport {MatVideoTrackDirective as ɵo} from './app/video/directives/mat-video-track.directive';\nexport {MatSliderProgressBarComponent as ɵd} from './app/video/internal/mat-slider-progress-bar/mat-slider-progress-bar.component';\nexport {SecondsToTimePipe as ɵa} from './app/video/pipes/seconds-to-time.pipe';\nexport {EventService as ɵc} from './app/video/services/event.service';\nexport {FullscreenService as ɵi} from './app/video/services/fullscreen.service';\nexport {MatDownloadButtonComponent as ɵg} from './app/video/ui/mat-download-button/mat-download-button.component';\nexport {MatFrameByFrameControlComponent as ɵp} from './app/video/ui/mat-frame-by-frame-control/mat-frame-by-frame-control.component';\nexport {MatFullscreenButtonComponent as ɵh} from './app/video/ui/mat-fullscreen-button/mat-fullscreen-button.component';\nexport {MatPlayButtonComponent as ɵe} from './app/video/ui/mat-play-button/mat-play-button.component';\nexport {MatQualityControlComponent as ɵk} from './app/video/ui/mat-quality-control/mat-quality-control.component';\nexport {MatSeekProgressControlComponent as ɵm} from './app/video/ui/mat-seek-progress-control/mat-seek-progress-control.component';\nexport {MatTimeControlComponent as ɵj} from './app/video/ui/mat-time-control/mat-time-control.component';\nexport {MatVideoSpinnerComponent as ɵl} from './app/video/ui/mat-video-spinner/mat-video-spinner.component';\nexport {MatVolumeControlComponent as ɵf} from './app/video/ui/mat-volume-control/mat-volume-control.component';\nexport {MatVideoComponent as ɵb} from './app/video/video.component';"],"names":["tslib_1.__values","tslib_1.__decorate","tslib_1.__param","tslib_1.__extends"],"mappings":"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"}