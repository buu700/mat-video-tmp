{"version":3,"file":"mat-video.js","sources":["ng://mat-video/app/video/services/event.service.ts","ng://mat-video/app/video/video.component.ts","ng://mat-video/app/video/directives/mat-video-source.directive.ts","ng://mat-video/app/video/directives/mat-video-track.directive.ts","ng://mat-video/app/video/internal/mat-slider-progress-bar/mat-slider-progress-bar.component.ts","ng://mat-video/app/video/pipes/seconds-to-time.pipe.ts","ng://mat-video/app/video/services/fullscreen.service.ts","ng://mat-video/app/video/ui/mat-download-button/mat-download-button.component.ts","ng://mat-video/app/video/ui/mat-frame-by-frame-control/mat-frame-by-frame-control.component.ts","ng://mat-video/app/video/ui/mat-fullscreen-button/mat-fullscreen-button.component.ts","ng://mat-video/app/video/ui/mat-play-button/mat-play-button.component.ts","ng://mat-video/app/video/ui/mat-quality-control/mat-quality-control.component.ts","ng://mat-video/app/video/ui/mat-seek-progress-control/mat-seek-progress-control.component.ts","ng://mat-video/app/video/ui/mat-time-control/mat-time-control.component.ts","ng://mat-video/app/video/ui/mat-video-spinner/mat-video-spinner.component.ts","ng://mat-video/app/video/ui/mat-volume-control/mat-volume-control.component.ts","ng://mat-video/app/video/video.module.ts","ng://mat-video/mat-video.ts"],"sourcesContent":["import { Injectable, Renderer2 } from '@angular/core';\nimport { EventHandler } from '../interfaces/event-handler.interface';\n\n@Injectable()\nexport class EventService {\n\n    constructor() { }\n\n    addEvents(renderer: Renderer2, events: EventHandler[]): void {\n        for (const event of events)\n            event.dispose = renderer.listen(event.element, event.name, newEvent => event.callback(newEvent));\n    }\n\n    removeEvents(events: EventHandler[]): void {\n        for (const event of events)\n            if (event.dispose)\n                event.dispose();\n    }\n\n}\n","import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnDestroy,\n    Output,\n    Renderer2,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { ThemePalette } from '@angular/material/core';\n\nimport { EventHandler } from './interfaces/event-handler.interface';\nimport { EventService } from './services/event.service';\n\n@Component({\n    selector: 'mat-video',\n    templateUrl: './video.component.html',\n    styleUrls: ['./video.component.css']\n})\nexport class MatVideoComponent implements AfterViewInit, OnChanges, OnDestroy {\n    @ViewChild('player') private player: ElementRef;\n    @ViewChild('video') private video: ElementRef;\n\n    @Input() src: string|MediaStream|MediaSource|Blob = null;\n    @Input() title: string = null;\n    @Input() autoplay: boolean = false;\n    @Input() preload: boolean = true;\n    @Input() loop: boolean = false;\n    @Input() quality: boolean = true;\n    @Input() fullscreen: boolean = true;\n    @Input() playsinline: boolean = false;\n    @Input() showFrameByFrame: boolean = false;\n    @Input() fps: number = 29.97;\n    @Input() download: boolean = false;\n    @Input() color: ThemePalette = 'primary';\n    @Input() spinner: string = 'spin';\n    @Input() poster: string = null;\n    @Input() keyboard: boolean = true;\n    @Input() overlay: boolean = null;\n    @Input() muted: boolean = false;\n    @Output() mutedChange = new EventEmitter<boolean>();\n\n\n    @Input()\n    get time() {\n        return this.getVideoTag().currentTime;\n    }\n\n    @Output() timeChange = new EventEmitter<number>();\n    set time(val: number) {\n        const video: HTMLVideoElement = this.getVideoTag();\n        if (video && val) {\n            if (val > video.duration) {\n                val = video.duration;\n            }\n            if (val < 0) {\n                val = 0;\n            }\n            if (val !== video.currentTime) {\n                video.currentTime = val;\n            }\n            if (this.lastTime !== video.currentTime) {\n                setTimeout(() => this.timeChange.emit(video.currentTime), 0);\n                this.lastTime = video.currentTime;\n            }\n        }\n    }\n\n    playing: boolean = false;\n\n    isFullscreen: boolean = false;\n\n    videoWidth: number;\n    videoHeight: number;\n    lastTime: number;\n\n    videoLoaded = false;\n\n    private isMouseMoving: boolean = false;\n    private isMouseMovingTimer: NodeJS.Timer;\n    private isMouseMovingTimeout: number = 2000;\n\n    private events: EventHandler[];\n\n    private srcObjectURL: string;\n\n    constructor(\n        private renderer: Renderer2,\n        private evt: EventService\n    ) { }\n\n    ngAfterViewInit(): void {\n        this.events = [\n            { element: this.video.nativeElement, name: 'loadstart', callback: event => this.videoLoaded = false, dispose: null },\n            { element: this.video.nativeElement, name: 'loadedmetadata', callback: event => this.evLoadedMetadata(event), dispose: null },\n            { element: this.video.nativeElement, name: 'error', callback: event => console.error('Unhandled Video Error', event), dispose: null },\n            { element: this.video.nativeElement, name: 'contextmenu', callback: event => event.preventDefault(), dispose: null },\n            { element: this.video.nativeElement, name: 'timeupdate', callback: event => this.evTimeUpdate(event), dispose: null },\n            { element: this.player.nativeElement, name: 'mousemove', callback: event => this.evMouseMove(event), dispose: null }\n        ];\n\n        this.video.nativeElement.onloadeddata = () => this.videoLoaded = true;\n\n        this.evt.addEvents(this.renderer, this.events);\n        this.setVideoSrc(this.src);\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes.src) {\n            this.setVideoSrc(this.src);\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.video.nativeElement.onloadeddata = null;\n\n        this.evt.removeEvents(this.events);\n        this.setVideoSrc(null);\n    }\n\n    load(): void {\n        if (this.video && this.video.nativeElement)\n            this.video.nativeElement.load();\n    }\n\n    getVideoTag(): HTMLVideoElement | null {\n        return this.video && this.video.nativeElement ? this.video.nativeElement as HTMLVideoElement : null;\n    }\n\n    evLoadedMetadata(event: any): void {\n        this.videoWidth = this.video.nativeElement.videoWidth;\n        this.videoHeight = this.video.nativeElement.videoHeight;\n        this.videoLoaded = true;\n    }\n\n    evMouseMove(event: any): void {\n        this.isMouseMoving = true;\n        clearTimeout(this.isMouseMovingTimer);\n        this.isMouseMovingTimer = setTimeout(() => {\n            this.isMouseMoving = false;\n        }, this.isMouseMovingTimeout);\n    }\n\n    evTimeUpdate(event: any): void {\n        this.time = this.getVideoTag().currentTime;\n    }\n\n    getOverlayClass(activeClass: string, inactiveClass: string): any {\n        if (this.overlay === null) {\n            return (!this.playing || this.isMouseMoving) ? activeClass : inactiveClass;\n        } else {\n            return this.overlay ? activeClass : inactiveClass;\n        }\n    }\n\n    private setVideoSrc(src: string|MediaStream|MediaSource|Blob): void {\n        if (this.srcObjectURL) {\n            URL.revokeObjectURL(this.srcObjectURL);\n            this.srcObjectURL = null;\n        }\n\n        if (!this.video || !this.video.nativeElement) {\n            return;\n        }\n\n        if (!src) {\n            this.video.nativeElement.src = null;\n            if ('srcObject' in HTMLVideoElement.prototype) {\n                this.video.nativeElement.srcObject = new MediaStream();\n            }\n        } else if (typeof src === 'string') {\n            this.video.nativeElement.src = src;\n        } else if ('srcObject' in HTMLVideoElement.prototype) {\n            this.video.nativeElement.srcObject = src;\n        } else {\n            this.srcObjectURL = URL.createObjectURL(src);\n            this.video.nativeElement.src = this.srcObjectURL;\n        }\n\n        this.video.nativeElement.muted = this.muted;\n    }\n\n}\n","import { Directive, ElementRef, Host, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { MatVideoComponent } from '../video.component';\n\n@Directive({\n  selector: '[matVideoSource]'\n})\nexport class MatVideoSourceDirective implements OnChanges {\n  @Input() src: string = null;\n  @Input() type: string = null;\n\n  private init = true;\n  private video: MatVideoComponent;\n  private source: HTMLSourceElement;\n\n  constructor(\n    @Host() private matVideoComponent: MatVideoComponent,\n    private el: ElementRef\n  ) {\n    this.video = matVideoComponent;\n    this.source = el.nativeElement;\n    this.init = false;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.source.src = this.src;\n    this.source.type = this.type;\n\n    if (!this.init)\n      this.video.load();\n  }\n\n}\n","import { Directive, ElementRef, Host, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { MatVideoComponent } from '../video.component';\n\n@Directive({\n    selector: '[matVideoTrack]'\n})\nexport class MatVideoTrackDirective implements OnChanges {\n    @Input() src: string = null;\n    @Input() kind: string = null;\n    @Input() srclang: string = null;\n    @Input() label: string = null;\n\n    private init = true;\n    private video: MatVideoComponent;\n    private track: HTMLTrackElement;\n\n    constructor(\n        @Host() private matVideoComponent: MatVideoComponent,\n        private el: ElementRef\n    ) {\n        this.video = matVideoComponent;\n        this.track = el.nativeElement;\n        this.init = false;\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        this.track.src = this.src;\n        this.track.kind = this.kind;\n        this.track.srclang = this.srclang;\n        this.track.label = this.label;\n\n        if (!this.init)\n            this.video.load();\n    }\n\n}\n","import { Component, Input, Output, EventEmitter, ElementRef, ChangeDetectorRef, ViewEncapsulation, ChangeDetectionStrategy, Optional, Attribute } from '@angular/core';\nimport { MatSlider, MAT_SLIDER_VALUE_ACCESSOR } from '@angular/material/slider';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\n\n/** Counter used to generate unique IDs for progress bars. */\nlet sliderprogressbarId = 0;\n\n@Component({\n    selector: 'mat-slider-progress-bar',\n    templateUrl: './mat-slider-progress-bar.component.html',\n    styleUrls: ['./mat-slider-progress-bar.component.css'],\n    providers: [MAT_SLIDER_VALUE_ACCESSOR],\n    host: {\n        '(focus)': '_onFocus()',\n        '(blur)': '_onBlur()',\n        '(click)': 'this[\"_onClick\"] ? this[\"_onClick\"]($event) : null', // Angular 5/6 support\n        '(mousedown)': 'this[\"_onMousedown\"] ? this[\"_onMousedown\"]($event) : null', // Angular 7 support\n        '(keydown)': '_onKeydown($event)',\n        '(keyup)': '_onKeyup()',\n        '(mouseenter)': '_onMouseenter()',\n        'class': 'mat-slider',\n        'role': 'slider',\n        '[tabIndex]': 'tabIndex',\n        '[attr.aria-disabled]': 'disabled',\n        '[attr.aria-valuemax]': 'max',\n        '[attr.aria-valuemin]': 'min',\n        '[attr.aria-valuenow]': 'value',\n        '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n        '[class.mat-slider-disabled]': 'disabled',\n        '[class.mat-slider-has-ticks]': 'tickInterval',\n        '[class.mat-slider-horizontal]': '!vertical',\n        '[class.mat-slider-axis-inverted]': '_invertAxis',\n        '[class.mat-slider-sliding]': '_isSliding',\n        '[class.mat-slider-thumb-label-showing]': 'thumbLabel',\n        '[class.mat-slider-vertical]': 'vertical',\n        '[class.mat-slider-min-value]': '_isMinValue',\n        '[class.mat-slider-hide-last-tick]': 'disabled || _isMinValue && _thumbGap && _invertAxis',\n    },\n    inputs: ['disabled', 'color', 'tabIndex'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\n\nexport class MatSliderProgressBarComponent extends MatSlider {\n    @Input() mode: string = 'buffer';\n    @Input() value: number = 0;\n    /** Buffer value of the progress bar. Defaults to zero. */\n    @Input()\n    get bufferValue(): number { return this._bufferValue; }\n    set bufferValue(v: number) { this._bufferValue = clamp(v || 0); }\n    private _bufferValue: number = 0;\n\n    /** The id of the progress bar. */\n    sliderprogressbarId = `mat-slider-progress-bar-${sliderprogressbarId++}`;\n\n    constructor(\n        elementRef: ElementRef,\n        focusMonitor: FocusMonitor,\n        changeDetectorRef: ChangeDetectorRef,\n        @Optional() dir: Directionality,\n        @Attribute('tabindex') tabIndex: string\n    ) {\n        super(elementRef, focusMonitor, changeDetectorRef, dir, tabIndex);\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n\n    /** CSS styles for the track fill element. */\n    get _trackBufferStyles(): { [key: string]: string } {\n        if (this.mode === 'buffer') {\n            const axis = this.vertical ? 'Y' : 'X';\n            return {\n                'transform': `translate${axis}(0px) scale${axis}(${this._bufferValue / 100})`\n            };\n        }\n    }\n}\n\n/** Clamps a value to be between two numbers, by default 0 and 100. */\nfunction clamp(v: number, min = 0, max = 100) {\n    return Math.max(min, Math.min(max, v));\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'secondsToTime'\n})\nexport class SecondsToTimePipe implements PipeTransform {\n    times = {\n        year: 31557600,\n        month: 2629746,\n        day: 86400,\n        hour: 3600,\n    };\n\n    transform(seconds: number) {\n        if (!seconds)\n            return '0:00';\n        else {\n            let time_string: string = '';\n            for (const key in this.times) {\n                if (Math.floor(seconds / this.times[key]) > 0) {\n                    time_string += Math.floor(seconds / this.times[key]).toString() + ':';\n                    seconds = seconds - this.times[key] * Math.floor(seconds / this.times[key]);\n                }\n            }\n            time_string += Math.floor(seconds / 60).toString() + ':';\n            seconds = seconds - 60 * Math.floor(seconds / 60);\n            if (Math.floor(seconds) < 10) time_string += '0';\n            time_string += Math.floor(seconds).toString();\n            return time_string;\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { FullscreenControls } from '../interfaces/fullscreen-controls.interface';\n\n@Injectable()\nexport class FullscreenService {\n\n    private fnMap: string[][] = [\n        // Object keys\n        [\n            'requestFullscreen',\n            'exitFullscreen',\n            'fullscreenElement',\n            'fullscreenEnabled',\n            'fullscreenchange',\n            'fullscreenerror'\n        ],\n        // New WebKit\n        [\n            'webkitRequestFullscreen',\n            'webkitExitFullscreen',\n            'webkitFullscreenElement',\n            'webkitFullscreenEnabled',\n            'webkitfullscreenchange',\n            'webkitfullscreenerror'\n\n        ],\n        // Old WebKit (Safari 5.1)\n        [\n            'webkitRequestFullScreen',\n            'webkitCancelFullScreen',\n            'webkitCurrentFullScreenElement',\n            'webkitCancelFullScreen',\n            'webkitfullscreenchange',\n            'webkitfullscreenerror'\n\n        ],\n        // Mozilla\n        [\n            'mozRequestFullScreen',\n            'mozCancelFullScreen',\n            'mozFullScreenElement',\n            'mozFullScreenEnabled',\n            'mozfullscreenchange',\n            'mozfullscreenerror'\n        ],\n        // MS\n        [\n            'msRequestFullscreen',\n            'msExitFullscreen',\n            'msFullscreenElement',\n            'msFullscreenEnabled',\n            'MSFullscreenChange',\n            'MSFullscreenError'\n        ]\n    ];\n\n    private fn: FullscreenControls;\n    private keyboardAllowed: boolean;\n\n    constructor() {\n        this.keyboardAllowed = typeof Element !== 'undefined' && 'ALLOW_KEYBOARD_INPUT' in Element;\n        const ret: any = {};\n        let val;\n\n        for (let i = 0; i < this.fnMap.length; i++) {\n            val = this.fnMap[i];\n            if (val && val[1] in document) {\n                for (i = 0; i < val.length; i++) {\n                    // Map everything to the first list of keys\n                    ret[this.fnMap[0][i].toString()] = val[i];\n                }\n                this.fn = ret;\n            }\n        }\n    }\n\n    public request(elem: any) {\n        const request = this.fn.requestFullscreen;\n\n        elem = elem || document.documentElement;\n\n        // Work around Safari 5.1 bug: reports support for\n        // keyboard in fullscreen even though it doesn't.\n        // Browser sniffing, since the alternative with\n        // setTimeout is even worse.\n        if (/5\\.1[.\\d]* Safari/.test(navigator.userAgent)) {\n            elem[request]();\n        } else {\n            elem[request](this.keyboardAllowed ? (Element as any).ALLOW_KEYBOARD_INPUT : {});\n        }\n    }\n\n    public exit() {\n        document[this.fn.exitFullscreen]();\n    }\n\n    public toggle(elem: any) {\n        if (this.isFullscreen()) {\n            this.exit();\n        } else {\n            this.request(elem);\n        }\n    }\n\n    public onChange(callback: any) {\n        document.addEventListener(this.fn.fullscreenchange, callback, false);\n    }\n\n    public onError(callback: any) {\n        document.addEventListener(this.fn.fullscreenerror, callback, false);\n    }\n\n    public isFullscreen() {\n        return Boolean(document[this.fn.fullscreenElement]);\n    }\n\n    public isEnabled() {\n        // Coerce to boolean in case of old WebKit\n        return Boolean(document[this.fn.fullscreenEnabled]);\n    }\n\n    public getElement() {\n        return document[this.fn.fullscreenElement];\n    }\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'mat-download-button',\n  templateUrl: './mat-download-button.component.html',\n  styleUrls: ['./mat-download-button.component.css']\n})\nexport class MatDownloadButtonComponent {\n  @Input() video: HTMLVideoElement;\n  @Input() title: string;\n\n  constructor() { }\n\n}\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'mat-frame-by-frame-control',\n    templateUrl: './mat-frame-by-frame-control.component.html',\n    styleUrls: ['./mat-frame-by-frame-control.component.css']\n})\nexport class MatFrameByFrameControlComponent implements OnInit {\n    @Input() video: HTMLVideoElement;\n    @Input() fps: number = 29.97;\n\n    constructor() { }\n\n    ngOnInit() {\n    }\n\n    seekFrames(nbFrames: number) {\n        if (!this.video.paused) {\n            this.video.pause();\n        }\n\n        const currentFrames = this.video.currentTime * this.fps;\n        const newPos = ((currentFrames + nbFrames) / this.fps) + 0.00001;\n        this.video.currentTime = newPos;\n    }\n\n}\n","import { Component, EventEmitter, HostListener, Input, OnInit, Output } from '@angular/core';\n\nimport { EventService } from '../../services/event.service';\nimport { FullscreenService } from '../../services/fullscreen.service';\n\n@Component({\n  selector: 'mat-fullscreen-button',\n  templateUrl: './mat-fullscreen-button.component.html',\n  styleUrls: ['./mat-fullscreen-button.component.css']\n})\nexport class MatFullscreenButtonComponent implements OnInit {\n  canFullscreen: boolean = false;\n\n  @Input() player: HTMLVideoElement;\n\n  @Input() fullscreen: boolean = false;\n\n  @Output() fullscreenChanged = new EventEmitter<boolean>();\n\n  @Input() keyboard: boolean = true;\n\n  constructor(\n    private fscreen: FullscreenService,\n    private evt: EventService\n  ) { }\n\n  ngOnInit(): void {\n    if (this.fscreen.isEnabled())\n      this.canFullscreen = true;\n\n    this.fscreen.onChange(event => this.fscreen.isFullscreen() ? this.onChangesFullscreen(true) : this.onChangesFullscreen(false));\n  }\n\n  setFullscreen(value: boolean) {\n    if (this.canFullscreen && this.fullscreen !== value)\n      this.toggleFullscreen();\n  }\n\n  toggleFullscreen(): void {\n    this.fullscreen = !this.fullscreen;\n    this.updateFullscreen();\n  }\n\n  updateFullscreen(): void {\n    this.fullscreen ? this.fscreen.request(this.player) : this.fscreen.exit();\n    this.fullscreenChanged.emit(this.fullscreen);\n  }\n\n  onChangesFullscreen(value: boolean): void {\n    this.fullscreen = value;\n    this.fullscreenChanged.emit(this.fullscreen);\n  }\n\n  @HostListener('document:keyup.f', ['$event'])\n  onFullscreenKey(event: KeyboardEvent) {\n    if (this.keyboard) {\n      this.toggleFullscreen();\n      event.preventDefault();\n    }\n  }\n\n}\n","import { AfterViewInit, Component, EventEmitter, HostListener, Input, OnDestroy, Output, Renderer2 } from '@angular/core';\n\nimport { EventHandler } from '../../interfaces/event-handler.interface';\nimport { EventService } from '../../services/event.service';\n\n@Component({\n  selector: 'mat-play-button',\n  templateUrl: './mat-play-button.component.html',\n  styleUrls: ['./mat-play-button.component.css']\n})\nexport class MatPlayButtonComponent implements AfterViewInit, OnDestroy {\n  @Input() video: HTMLVideoElement;\n\n  @Input() play: boolean = false;\n\n  @Output() playChanged = new EventEmitter<boolean>();\n\n  @Input() keyboard: boolean = true;\n\n  private events: EventHandler[];\n\n  constructor(\n    private renderer: Renderer2,\n    private evt: EventService\n  ) { }\n\n  ngAfterViewInit(): void {\n    this.events = [\n      { element: this.video, name: 'play', callback: event => this.setVideoPlayback(true), dispose: null },\n      { element: this.video, name: 'pause', callback: event => this.setVideoPlayback(false), dispose: null },\n      { element: this.video, name: 'durationchange', callback: event => this.setVideoPlayback(false), dispose: null },\n      { element: this.video, name: 'ended', callback: event => this.setVideoPlayback(false), dispose: null },\n      { element: this.video, name: 'click', callback: event => this.toggleVideoPlayback(), dispose: null }\n    ];\n\n    this.evt.addEvents(this.renderer, this.events);\n  }\n\n  ngOnDestroy(): void {\n    this.evt.removeEvents(this.events);\n  }\n\n  setVideoPlayback(value: boolean) {\n    if (this.play !== value)\n      this.toggleVideoPlayback();\n  }\n\n  toggleVideoPlayback(): void {\n    this.play = !this.play;\n    this.updateVideoPlayback();\n  }\n\n  updateVideoPlayback(): void {\n    this.play ? this.video.play() : this.video.pause();\n    this.playChanged.emit(this.play);\n  }\n\n  @HostListener('document:keyup.space', ['$event'])\n  onPlayKey(event: KeyboardEvent) {\n    if (this.keyboard) {\n      this.toggleVideoPlayback();\n      event.preventDefault();\n    }\n  }\n\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'mat-quality-control',\n  templateUrl: './mat-quality-control.component.html',\n  styleUrls: ['./mat-quality-control.component.css']\n})\nexport class MatQualityControlComponent {\n  @Input() video: HTMLVideoElement;\n\n  constructor() { }\n\n}\n","import { AfterViewInit, Component, EventEmitter, Input, OnDestroy, Output, Renderer2 } from '@angular/core';\nimport { ThemePalette } from '@angular/material/core';\n\nimport { EventHandler } from '../../interfaces/event-handler.interface';\nimport { EventService } from '../../services/event.service';\n\n@Component({\n  selector: 'mat-seek-progress-control',\n  templateUrl: './mat-seek-progress-control.component.html',\n  styleUrls: ['./mat-seek-progress-control.component.css']\n})\nexport class MatSeekProgressControlComponent implements AfterViewInit, OnDestroy {\n  curTimePercent: number = 0;\n  bufTimePercent: number = 0;\n\n  @Input() video: HTMLVideoElement = null;\n\n  @Input() color: ThemePalette = 'primary';\n\n  @Input() currentTime: number = 0;\n\n  @Output() currentTimeChanged = new EventEmitter<number>();\n\n  @Input() bufferedTime: number = 0;\n\n  @Output() bufferedTimeChanged = new EventEmitter<number>();\n\n  private events: EventHandler[];\n\n  constructor(\n    private renderer: Renderer2,\n    private evt: EventService\n  ) { }\n\n  ngAfterViewInit(): void {\n    this.events = [\n      { element: this.video, name: 'seeking', callback: event => this.updateCurrentTime(this.video.currentTime), dispose: null },\n      { element: this.video, name: 'canplaythrough', callback: event => this.updateBufferedTime(), dispose: null },\n      { element: this.video, name: 'timeupdate', callback: event => this.updateCurrentTime(this.video.currentTime), dispose: null },\n      { element: this.video, name: 'progress', callback: event => this.updateBufferedTime(), dispose: null }\n    ];\n\n    this.evt.addEvents(this.renderer, this.events);\n  }\n\n  ngOnDestroy(): void {\n    this.evt.removeEvents(this.events);\n  }\n\n  seekVideo(value: number): void {\n    const percentage = value / 100;\n    const newTime = this.video.duration * percentage;\n    this.video.currentTime = newTime;\n  }\n\n  updateCurrentTime(time: number): void {\n    this.currentTime = time;\n    this.curTimePercent = this.updateTime(this.currentTimeChanged, this.currentTime);\n  }\n\n  updateBufferedTime(): void {\n    if (this.video.buffered.length > 0) {\n      let largestBufferValue = 0;\n      for (let i = 0; i < this.video.buffered.length; i++) {\n        const cur = this.video.currentTime;\n        const start = this.video.buffered.start(i);\n        const end = this.video.buffered.end(i);\n        if (start <= cur && end > cur && (end - start) > largestBufferValue)\n          largestBufferValue = end;\n      }\n      this.bufferedTime = largestBufferValue;\n      this.bufTimePercent = this.updateTime(this.bufferedTimeChanged, this.bufferedTime);\n    }\n  }\n\n  updateTime(emitter: EventEmitter<number>, time: number): number {\n    emitter.emit(time);\n    return time / this.video.duration * 100;\n  }\n\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'mat-time-control',\n  templateUrl: './mat-time-control.component.html',\n  styleUrls: ['./mat-time-control.component.css']\n})\nexport class MatTimeControlComponent {\n  @Input() video: HTMLVideoElement;\n\n  constructor() { }\n\n}\n","import { AfterViewInit, Component, Input, OnDestroy, Renderer2 } from '@angular/core';\n\nimport { EventHandler } from '../../interfaces/event-handler.interface';\nimport { EventService } from '../../services/event.service';\n\n@Component({\n  selector: 'mat-video-spinner',\n  templateUrl: './mat-video-spinner.component.html',\n  styleUrls: [\n    './mat-video-spinner.component.scss',\n    './indicators/spin.css',\n    './indicators/dot.css',\n    './indicators/split-ring.css',\n    './indicators/hourglass.css'\n  ]\n})\nexport class MatVideoSpinnerComponent implements AfterViewInit, OnDestroy {\n  @Input() video: HTMLVideoElement;\n  @Input() spinner: string = 'spin';\n\n  videoBuffering = false;\n  videoLoaded = false;\n\n  private events: EventHandler[] = [];\n\n  constructor(\n    private renderer: Renderer2,\n    private evt: EventService\n  ) { }\n\n  ngAfterViewInit(): void {\n    this.events = [\n      { element: this.video, name: 'loadstart', callback: event => this.videoLoaded = false, dispose: null },\n      { element: this.video, name: 'loadedmetadata', callback: event => this.videoLoaded = true, dispose: null },\n      { element: this.video, name: 'canplay', callback: event => this.videoBuffering = false, dispose: null },\n      { element: this.video, name: 'waiting', callback: event => this.videoBuffering = true, dispose: null },\n      { element: this.video, name: 'durationchange', callback: event => this.videoBuffering = true, dispose: null }\n    ];\n\n    this.video.onloadeddata = () => this.videoLoaded = true;\n\n    this.evt.addEvents(this.renderer, this.events);\n  }\n\n  ngOnDestroy(): void {\n    this.video.onloadeddata = null;\n\n    this.evt.removeEvents(this.events);\n  }\n\n}\n","import {\n  AfterViewInit,\n  Component,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges\n} from '@angular/core';\nimport { ThemePalette } from '@angular/material/core';\n\nimport { EventService } from '../../services/event.service';\n\n@Component({\n  selector: 'mat-volume-control',\n  templateUrl: './mat-volume-control.component.html',\n  styleUrls: ['./mat-volume-control.component.css']\n})\nexport class MatVolumeControlComponent implements AfterViewInit, OnChanges {\n  @Input() video: HTMLVideoElement = null;\n\n  @Input() color: ThemePalette = 'primary';\n\n  @Input() volume: number = 1;\n\n  @Output() volumeChanged = new EventEmitter<number>();\n\n  @Input() muted: boolean = false;\n\n  @Output() mutedChanged = new EventEmitter<boolean>();\n\n  @Input() keyboard: boolean = true;\n\n  constructor(private evt: EventService) { }\n\n  ngAfterViewInit(): void {\n    this.updateMuted(false);\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.muted) {\n      this.updateMuted(false);\n    }\n  }\n\n  setVolume(value: number): void {\n    this.volume = value;\n    this.video.volume = this.volume;\n    this.volumeChanged.emit(this.volume);\n\n    if (this.volume > 0)\n      this.setMuted(false);\n  }\n\n  setMuted(value: boolean): void {\n    if (this.muted !== value)\n      this.toggleMuted();\n  }\n\n  toggleMuted(): void {\n    this.muted = !this.muted;\n    this.updateMuted();\n  }\n\n  updateMuted(emitChange: boolean = true): void {\n    if (this.video) {\n      this.video.muted = this.muted;\n    }\n\n    if (emitChange) {\n      this.mutedChanged.emit(this.muted);\n    }\n  }\n\n  @HostListener('document:keyup.m', ['$event'])\n  onMuteKey(event: KeyboardEvent) {\n    if (this.keyboard) {\n      this.toggleMuted();\n      event.preventDefault();\n    }\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSliderModule } from '@angular/material/slider';\n\nimport { MatVideoSourceDirective } from './directives/mat-video-source.directive';\nimport { MatVideoTrackDirective } from './directives/mat-video-track.directive';\nimport { MatSliderProgressBarComponent } from './internal/mat-slider-progress-bar/mat-slider-progress-bar.component';\nimport { SecondsToTimePipe } from './pipes/seconds-to-time.pipe';\nimport { EventService } from './services/event.service';\nimport { FullscreenService } from './services/fullscreen.service';\nimport { MatDownloadButtonComponent } from './ui/mat-download-button/mat-download-button.component';\nimport { MatFrameByFrameControlComponent } from './ui/mat-frame-by-frame-control/mat-frame-by-frame-control.component';\nimport { MatFullscreenButtonComponent } from './ui/mat-fullscreen-button/mat-fullscreen-button.component';\nimport { MatPlayButtonComponent } from './ui/mat-play-button/mat-play-button.component';\nimport { MatQualityControlComponent } from './ui/mat-quality-control/mat-quality-control.component';\nimport { MatSeekProgressControlComponent } from './ui/mat-seek-progress-control/mat-seek-progress-control.component';\nimport { MatTimeControlComponent } from './ui/mat-time-control/mat-time-control.component';\nimport { MatVideoSpinnerComponent } from './ui/mat-video-spinner/mat-video-spinner.component';\nimport { MatVolumeControlComponent } from './ui/mat-volume-control/mat-volume-control.component';\nimport { MatVideoComponent } from './video.component';\n\n@NgModule({\n    declarations: [\n        SecondsToTimePipe,\n        MatVideoComponent,\n        MatSliderProgressBarComponent,\n        MatPlayButtonComponent,\n        MatVolumeControlComponent,\n        MatDownloadButtonComponent,\n        MatFullscreenButtonComponent,\n        MatTimeControlComponent,\n        MatQualityControlComponent,\n        MatVideoSpinnerComponent,\n        MatSeekProgressControlComponent,\n        MatVideoSourceDirective,\n        MatVideoTrackDirective,\n        MatFrameByFrameControlComponent\n    ],\n    imports: [\n        CommonModule,\n        MatIconModule,\n        MatButtonModule,\n        MatSliderModule,\n    ],\n    exports: [\n        MatVideoComponent,\n        MatVideoSourceDirective,\n        MatVideoTrackDirective\n    ],\n    providers: [\n        FullscreenService,\n        EventService\n    ]\n})\nexport class MatVideoModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {MatVideoSourceDirective as ɵn} from './app/video/directives/mat-video-source.directive';\nexport {MatVideoTrackDirective as ɵo} from './app/video/directives/mat-video-track.directive';\nexport {MatSliderProgressBarComponent as ɵd} from './app/video/internal/mat-slider-progress-bar/mat-slider-progress-bar.component';\nexport {SecondsToTimePipe as ɵa} from './app/video/pipes/seconds-to-time.pipe';\nexport {EventService as ɵc} from './app/video/services/event.service';\nexport {FullscreenService as ɵi} from './app/video/services/fullscreen.service';\nexport {MatDownloadButtonComponent as ɵg} from './app/video/ui/mat-download-button/mat-download-button.component';\nexport {MatFrameByFrameControlComponent as ɵp} from './app/video/ui/mat-frame-by-frame-control/mat-frame-by-frame-control.component';\nexport {MatFullscreenButtonComponent as ɵh} from './app/video/ui/mat-fullscreen-button/mat-fullscreen-button.component';\nexport {MatPlayButtonComponent as ɵe} from './app/video/ui/mat-play-button/mat-play-button.component';\nexport {MatQualityControlComponent as ɵk} from './app/video/ui/mat-quality-control/mat-quality-control.component';\nexport {MatSeekProgressControlComponent as ɵm} from './app/video/ui/mat-seek-progress-control/mat-seek-progress-control.component';\nexport {MatTimeControlComponent as ɵj} from './app/video/ui/mat-time-control/mat-time-control.component';\nexport {MatVideoSpinnerComponent as ɵl} from './app/video/ui/mat-video-spinner/mat-video-spinner.component';\nexport {MatVolumeControlComponent as ɵf} from './app/video/ui/mat-volume-control/mat-volume-control.component';\nexport {MatVideoComponent as ɵb} from './app/video/video.component';"],"names":["tslib_1.__decorate","tslib_1.__param"],"mappings":"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"}